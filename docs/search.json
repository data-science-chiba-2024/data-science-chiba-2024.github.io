[
  {
    "objectID": "day1/index.html#ニッタ-ジョエル",
    "href": "day1/index.html#ニッタ-ジョエル",
    "title": "データサイエンス",
    "section": "ニッタ ジョエル",
    "text": "ニッタ ジョエル\n\n\n\n研究テーマその１：シダ植物の進化と生態学\n研究テーマその２：データサイエンス用ソフトの開発\nhttps://www.joelnitta.com"
  },
  {
    "objectID": "day1/index.html#みなさん生成aichatgptdeeplなどを使っていますか",
    "href": "day1/index.html#みなさん生成aichatgptdeeplなどを使っていますか",
    "title": "データサイエンス",
    "section": "みなさん、生成AI（ChatGPT、DeepLなど）を使っていますか？",
    "text": "みなさん、生成AI（ChatGPT、DeepLなど）を使っていますか？\n\n\n\n私も使っています\nデータサイエンスのみならず、様々な場面において大事なツール\nでも、そもそもAIが何をしているのか、分かりますか？\n\n\n\nhttps://chat.openai.com/"
  },
  {
    "objectID": "day1/index.html#artificial-intelligenceという名前は嘘",
    "href": "day1/index.html#artificial-intelligenceという名前は嘘",
    "title": "データサイエンス",
    "section": "Artificial Intelligenceという名前は嘘",
    "text": "Artificial Intelligenceという名前は嘘\n\nAI ＝「人工知能」\n・・でも、AIは何も考えていない！\n\n真偽を知らない！"
  },
  {
    "objectID": "day1/index.html#llmは言葉を予測するモデルである",
    "href": "day1/index.html#llmは言葉を予測するモデルである",
    "title": "データサイエンス",
    "section": "LLMは言葉を予測するモデルである",
    "text": "LLMは言葉を予測するモデルである\n\nChatGPTはLarge Language Model（LLM）の一種である\n\n言葉を予測するモデル\n莫大的な量のデータ（インターネットの大部分）を使っている\n\nLLMは入力された言葉に対して、最も確率の高い次に来る言葉を返す"
  },
  {
    "objectID": "day1/index.html#llmにとっての言葉は人間にとっての言葉と違う",
    "href": "day1/index.html#llmにとっての言葉は人間にとっての言葉と違う",
    "title": "データサイエンス",
    "section": "LLMにとっての「言葉」は人間にとっての言葉と違う",
    "text": "LLMにとっての「言葉」は人間にとっての言葉と違う\n\n言葉ではなく、token（トークン）という\n\nhttps://platform.openai.com/tokenizer"
  },
  {
    "objectID": "day1/index.html#llmはトークンを予測するモデルである",
    "href": "day1/index.html#llmはトークンを予測するモデルである",
    "title": "データサイエンス",
    "section": "LLMはトークンを予測するモデルである",
    "text": "LLMはトークンを予測するモデルである\nhttps://perplexity.vercel.app/"
  },
  {
    "objectID": "day1/index.html#llmは必ずもっともらしい言葉を自信満々で返す",
    "href": "day1/index.html#llmは必ずもっともらしい言葉を自信満々で返す",
    "title": "データサイエンス",
    "section": "LLMは必ず「もっともらしい」言葉を自信満々で返す",
    "text": "LLMは必ず「もっともらしい」言葉を自信満々で返す\n・・けど、それが正解とは限らない\n\n平気な顔で嘘をつく"
  },
  {
    "objectID": "day1/index.html#llmは妄想しがち",
    "href": "day1/index.html#llmは妄想しがち",
    "title": "データサイエンス",
    "section": "LLMは「妄想」しがち",
    "text": "LLMは「妄想」しがち\nhttps://chat.openai.com/share/dcee3278-0f51-4bc2-8051-849ef1b0b072\n\nLLMが返した言葉を信用できるかどうか判断するのがあなたの責任"
  },
  {
    "objectID": "day1/index.html#じゃどうやって使ったら良いのか",
    "href": "day1/index.html#じゃどうやって使ったら良いのか",
    "title": "データサイエンス",
    "section": "じゃ、どうやって使ったら良いのか？",
    "text": "じゃ、どうやって使ったら良いのか？\n\n返ってきた答えを確かめる\n\nコードを走らせてみる\n内容を他のソースで確認する\n裏付けとなっている文献を出すように指示する（ChatGPT 4.0に限る）\n\n必ず批判的なスタンスを持つこと"
  },
  {
    "objectID": "day1/index.html#コピペしないこと",
    "href": "day1/index.html#コピペしないこと",
    "title": "データサイエンス",
    "section": "コピペしないこと",
    "text": "コピペしないこと\n\n大学とは自分で考えることを身につける場である\n「言葉の計算機」だと思えば良い\n\n計算機があるからといって、算数を全く勉強しなくていいわけではない\n\nLLMは色々な作業を手伝う（よく嘘をつく）アシスタントであるが、自分の代わりに考えるものではない！"
  },
  {
    "objectID": "day1/index.html#宿題",
    "href": "day1/index.html#宿題",
    "title": "データサイエンス",
    "section": "宿題",
    "text": "宿題\n\n自分が得意（詳しい）分野についてChatGPTに質問して、しばらく会話をしてください\n\n嘘を見つけたら、それをメモってください\n\n提出はしなくていいけど、次回の授業でディスカッションがある"
  },
  {
    "objectID": "day1/index.html#なぜr",
    "href": "day1/index.html#なぜr",
    "title": "データサイエンス",
    "section": "なぜR?",
    "text": "なぜR?\n\n\n\n無料\nデータ解析の機能が豊富\n多様なニーズに応えるパッケージ\nコミュニティー\n\n\n\nhttps://www.linkedin.com/pulse/why-r-4-reason-learn-programming-language-business-corporate"
  },
  {
    "objectID": "day1/index.html#rとrstudioについて",
    "href": "day1/index.html#rとrstudioについて",
    "title": "データサイエンス",
    "section": "RとRStudioについて",
    "text": "RとRStudioについて\n\n\n\nRとは「R Project for Statistical Computing」という組織が提供しているオープンソース（タダの）プログラミング言語"
  },
  {
    "objectID": "day1/index.html#rとrstudioについて-1",
    "href": "day1/index.html#rとrstudioについて-1",
    "title": "データサイエンス",
    "section": "RとRStudioについて",
    "text": "RとRStudioについて\n\n\n\nRのコードを書く・実行する最適なソフト（タダ）\nRStudioなしでもRは一応使えるけど、不便\nこの授業ではRStudioを介してRを使う。"
  },
  {
    "objectID": "day1/index.html#rのインストール",
    "href": "day1/index.html#rのインストール",
    "title": "データサイエンス",
    "section": "Rのインストール",
    "text": "Rのインストール\nhttps://cloud.r-project.org/から自分のOSに合ったファイルをダウンロードして、インストール"
  },
  {
    "objectID": "day1/index.html#rstudioのインストール",
    "href": "day1/index.html#rstudioのインストール",
    "title": "データサイエンス",
    "section": "RStudioのインストール",
    "text": "RStudioのインストール\nhttps://posit.co/download/rstudio-desktop/から自分のOSに合ったファイルをダウンロードして、インストール"
  },
  {
    "objectID": "day1/index.html#困ったら",
    "href": "day1/index.html#困ったら",
    "title": "データサイエンス",
    "section": "困ったら・・",
    "text": "困ったら・・\nご連絡下さい（joelnitta@chiba-u.jp）"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "データサイエンス",
    "section": "",
    "text": "千葉大学 総合国際学位プログラムの授業\n担当教員：ニッタ ジョエル"
  },
  {
    "objectID": "index.html#概要",
    "href": "index.html#概要",
    "title": "データサイエンス",
    "section": "概要",
    "text": "概要\nデータ解析は、理系だけではなく、文系も含めた多くの学問分野で使われるようになっている。本授業では、特に大学院生の研究に応用できるようにデータサイエンスの基本的なスキルとツールを学ぶ。主に「R」プログラミング言語を使用するが、大学院生のニーズに合わせて、必要なツールがあれば適宜授業の内容に加える。"
  },
  {
    "objectID": "index.html#教科書",
    "href": "index.html#教科書",
    "title": "データサイエンス",
    "section": "教科書",
    "text": "教科書\n\nR for Data Science (2nd Edition) by Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund\n\nアマゾンには第１エディションの翻訳がある"
  },
  {
    "objectID": "index.html#スケジュール",
    "href": "index.html#スケジュール",
    "title": "データサイエンス",
    "section": "スケジュール",
    "text": "スケジュール\n毎週のリーディングを講義の前に読んでください。\n（全ての講義の録画はありません）\n\n第１回（2024-04-02）: 生成AIの基本、RとRStudioのインストール（オンデマンド）\n\nスライド\n録画\n\n第２回（2024-04-09）: ガイダンス、データサイエンスとR入門\n\nスライド\nリーディング\n\nR4DS Introduction\nR4DS Chapter 2 (Workflow: Basics)\n\n\n第３回（2024-04-16）: プロジェクトの整理とデータの読み込み\n\nスライド\nリーディング\n\nR4DS Chapter 6 (Workflow: Scripts and Projects)\nR4DS Chapter 7 (Data Import)\n\n\n第４回（2024-04-23）: データの整理（１）\n\nスライド\nリーディング\n\nR4DS Chapter 3 (Data Transformation)\n\n\n第５回（2024-05-07）: データの整理（２）\n\nスライド\nリーディング\n\nR4DS Chapter 5 (Data Tidying)\nR4DS Chapter 19 (Joins)\n\n\n第６回（2024-05-14）: データの可視化\n\nスライド\nリーディング\n\nR4DS Chapter 1 (Data Visualization)\n\n\n第７回（2024-05-14）: 再現可能な文書の書き方\n\nスライド\nリーディング\n\nR4DS Chapter 28 (Quarto)\n\n\n第８回（2024-05-28）: レポートの発表、再現可能なデータ解析のベストプラクティス\n\nスライド"
  },
  {
    "objectID": "index.html#オフィスアワー",
    "href": "index.html#オフィスアワー",
    "title": "データサイエンス",
    "section": "オフィスアワー",
    "text": "オフィスアワー\n予約制（joelnitta@chiba-u.jpまでメールにて連絡ください）。対面・非対面での相談、ご希望とご都合に合わせて対応いたします。"
  },
  {
    "objectID": "index.html#リンク",
    "href": "index.html#リンク",
    "title": "データサイエンス",
    "section": "リンク",
    "text": "リンク\n\nシラバス"
  },
  {
    "objectID": "day2/index.html#ニッタ-ジョエル",
    "href": "day2/index.html#ニッタ-ジョエル",
    "title": "データサイエンス",
    "section": "ニッタ ジョエル",
    "text": "ニッタ ジョエル\n\n\n\n研究テーマその１：シダ植物の進化と生態学\n研究テーマその２：データサイエンス用ソフトの開発\nhttps://www.joelnitta.com"
  },
  {
    "objectID": "day2/index.html#スケジュール",
    "href": "day2/index.html#スケジュール",
    "title": "データサイエンス",
    "section": "スケジュール",
    "text": "スケジュール\n\n生成AIの基本、RとRStudioのインストール（オンデマンド）\nガイダンス、データサイエンスとR入門\nプロジェクトの整理とデータの読み込み\nデータの整理\nデータの可視化\n再現可能な文書の書き方\nレポートの発表\n再現性を高めるツール（オンデマンド）\n\n内容はニーズに合わせる"
  },
  {
    "objectID": "day2/index.html#サイト",
    "href": "day2/index.html#サイト",
    "title": "データサイエンス",
    "section": "サイト",
    "text": "サイト\nhttps://data-science-chiba-2024.github.io/\nスライドと動画のリンクが掲載されている"
  },
  {
    "objectID": "day2/index.html#オフィスアワー",
    "href": "day2/index.html#オフィスアワー",
    "title": "データサイエンス",
    "section": "オフィスアワー",
    "text": "オフィスアワー\n予約制（joelnitta@chiba-u.jpまでメールにて連絡ください）。対面・非対面での相談、ご希望とご都合に合わせて対応いたします。"
  },
  {
    "objectID": "day2/index.html#教科書",
    "href": "day2/index.html#教科書",
    "title": "データサイエンス",
    "section": "教科書",
    "text": "教科書\n\n\n\nR for Data Science (2nd edition)\n\n英語版はオンラインで無料 https://r4ds.hadley.nz/\n日本語版（第１エディションのみ）はアマゾンなどから"
  },
  {
    "objectID": "day2/index.html#リーディング",
    "href": "day2/index.html#リーディング",
    "title": "データサイエンス",
    "section": "リーディング",
    "text": "リーディング\n毎週のリーディングを講義の前に読んでください。\n\n第２回（2024-04-09）: ガイダンス、データサイエンスとR入門\n\nR4DS Introduction\nR4DS Chapter 2 (Workflow: Basics)\n\n第３回（2024-04-16）: プロジェクトの整理とデータの読み込み\n\nR4DS Chapter 6 (Workflow: Scripts and Projects)\nR4DS Chapter 7 (Data Import)"
  },
  {
    "objectID": "day2/index.html#リーディング-1",
    "href": "day2/index.html#リーディング-1",
    "title": "データサイエンス",
    "section": "リーディング",
    "text": "リーディング\n\n第４回（2024-04-23）: データの整理\n\nR4DS Chapter 3 (Data Transformation)\nR4DS Chapter 5 (Data Tidying)\n\n第５回（2024-05-07）: データの可視化\n\nR4DS Chapter 1 (Data Visualization)\n\n第６回（2024-05-14）: 再現可能な文書の書き方\n\nR4DS Chapter 28 (Quarto)"
  },
  {
    "objectID": "day2/index.html#課題と評価",
    "href": "day2/index.html#課題と評価",
    "title": "データサイエンス",
    "section": "課題と評価",
    "text": "課題と評価\n\n宿題（25%）\n\nMoodleからダウンロード、提出\n締め切り：次の週の授業まで\n\nリーディング\n授業のディスカッションに参加する（25%）\nRを使って、自分の研究に関するレポートを書く（50%）"
  },
  {
    "objectID": "day2/index.html#データサイエンスとは-1",
    "href": "day2/index.html#データサイエンスとは-1",
    "title": "データサイエンス",
    "section": "データサイエンスとは？",
    "text": "データサイエンスとは？\n\nデータから洞察（インサイト）を得ること"
  },
  {
    "objectID": "day2/index.html#データサイエンスとは-2",
    "href": "day2/index.html#データサイエンスとは-2",
    "title": "データサイエンス",
    "section": "データサイエンスとは？",
    "text": "データサイエンスとは？\n\n他の特徴\n\n大量のデータを扱う（「ビッグデータ」）\n\n統計学を使う\n\nプログラミングを使う（python、R、など）\n様々な用がある（学術研究、治療、産業、など）"
  },
  {
    "objectID": "day2/index.html#データ解析の循環",
    "href": "day2/index.html#データ解析の循環",
    "title": "データサイエンス",
    "section": "データ解析の循環",
    "text": "データ解析の循環\n\nhttps://r4ds.hadley.nz/diagrams/data-science/base.png"
  },
  {
    "objectID": "day2/index.html#再現性とは-1",
    "href": "day2/index.html#再現性とは-1",
    "title": "データサイエンス",
    "section": "再現性とは？",
    "text": "再現性とは？\n\n他の人（将来の自分を含めて）があなたの解析を再度行って、同じ結果を得ることができること\nデータサイエンスにおいて、とても重要。再現性がなければ、「サイエンス」にならない！"
  },
  {
    "objectID": "day2/index.html#再現可能にするには",
    "href": "day2/index.html#再現可能にするには",
    "title": "データサイエンス",
    "section": "再現可能にするには・・",
    "text": "再現可能にするには・・\n\nコードが必要\n\n自分が何をやったのか、記録が残る\n将来、同じ解析ができる\n\nコードとして残らない方法はよろしくない（エクセル、SPSSなど）"
  },
  {
    "objectID": "day2/index.html#本授業ではrを使う",
    "href": "day2/index.html#本授業ではrを使う",
    "title": "データサイエンス",
    "section": "本授業では、Rを使う",
    "text": "本授業では、Rを使う\n\n\n\n無料\nデータ解析の機能が豊富\n多様なニーズに応えるパッケージ\nコミュニティー\n\n\n\nhttps://www.linkedin.com/pulse/why-r-4-reason-learn-programming-language-business-corporate"
  },
  {
    "objectID": "day2/index.html#rとrstudioについて",
    "href": "day2/index.html#rとrstudioについて",
    "title": "データサイエンス",
    "section": "RとRStudioについて",
    "text": "RとRStudioについて\n\n\n\nRとは「R Project for Statistical Computing」という組織が提供しているオープンソースプログラミング言語"
  },
  {
    "objectID": "day2/index.html#rとrstudioについて-1",
    "href": "day2/index.html#rとrstudioについて-1",
    "title": "データサイエンス",
    "section": "RとRStudioについて",
    "text": "RとRStudioについて\n\n\n\nRのコードを書く・実行する最適なソフト（無料）\nRStudioなしでもRは一応使えるけど、不便\nこの授業ではRStudioを介してRを使う。"
  },
  {
    "objectID": "day2/index.html#rstudioについて",
    "href": "day2/index.html#rstudioについて",
    "title": "データサイエンス",
    "section": "RStudioについて",
    "text": "RStudioについて\n\n主に四つのパネルがある\n\nSource（コードを書く）\nEnvironment（今のRのセッションに入っているオブジェクトが表示される）\nR Console（Rに直接コマンドをする）\nFiles and Plots（ファイルと図）"
  },
  {
    "objectID": "day2/index.html#rを計算機として使う",
    "href": "day2/index.html#rを計算機として使う",
    "title": "データサイエンス",
    "section": "Rを計算機として使う",
    "text": "Rを計算機として使う\n\nRStudioのコンソール（左下のパネル）にカーソルを置いて、簡単な計算をしてみましょう：\n\n\n\n2 * 20\n\n[1] 40\n\n\n\nおめでとうございます！Rプログラミングができました！"
  },
  {
    "objectID": "day2/index.html#オブジェクト変数について",
    "href": "day2/index.html#オブジェクト変数について",
    "title": "データサイエンス",
    "section": "オブジェクト（変数）について",
    "text": "オブジェクト（変数）について\n\n次に、Rの中のデータを変数（Rでは、「オブジェクト Object」と呼ぶ）として保存しよう：\n\n\n\nage &lt;- 2 * 20"
  },
  {
    "objectID": "day2/index.html#オブジェクト変数について-1",
    "href": "day2/index.html#オブジェクト変数について-1",
    "title": "データサイエンス",
    "section": "オブジェクト（変数）について",
    "text": "オブジェクト（変数）について\nこれだけでは何も返ってこない。\n変数の内容を確認するには、コンソールにその変数の名前を打てば良い：\n\n\nage\n\n[1] 40"
  },
  {
    "objectID": "day2/index.html#関数とは",
    "href": "day2/index.html#関数とは",
    "title": "データサイエンス",
    "section": "関数とは",
    "text": "関数とは\n何かの値（インプット）を受けて、処理して、計算結果（アウトプット）を返すもの\n\n\n\nhttps://manamina.valuesccg.com/articles/756"
  },
  {
    "objectID": "day2/index.html#関数とは-1",
    "href": "day2/index.html#関数とは-1",
    "title": "データサイエンス",
    "section": "関数とは",
    "text": "関数とは\n関数の書き方：\n\n関数名(引数)\n\n例えば\n\n\nround(3.1415, digits = 1)\n\n[1] 3.1"
  },
  {
    "objectID": "day2/index.html#関数とは-2",
    "href": "day2/index.html#関数とは-2",
    "title": "データサイエンス",
    "section": "関数とは",
    "text": "関数とは\n関数の使い方を確認したい時は?関数名と打って、ヘルプファイルを参照すれば良い\n\n\n?round"
  },
  {
    "objectID": "day2/index.html#パッケージとは",
    "href": "day2/index.html#パッケージとは",
    "title": "データサイエンス",
    "section": "パッケージとは",
    "text": "パッケージとは\n\nRパッケージとは、Rが出来ることを大幅に増やす「追加」のソフト（関数のまとまり）\n\n現在、２万近くのパッケージがある！"
  },
  {
    "objectID": "day2/index.html#パッケージのインストール",
    "href": "day2/index.html#パッケージのインストール",
    "title": "データサイエンス",
    "section": "パッケージのインストール",
    "text": "パッケージのインストール\nRパッケージのインストールを行うには、install.packages()を使う：\n\ninstall.packages(\"ggplot2\")\n\n一回インストールしたら、次回からはしなくて良いので、これはコードとして保存しない"
  },
  {
    "objectID": "day2/index.html#パッケージのロード",
    "href": "day2/index.html#パッケージのロード",
    "title": "データサイエンス",
    "section": "パッケージのロード",
    "text": "パッケージのロード\n\nパッケージをインストールしたら、使える状態するにはロードすることが必要\n\nインストールは一回でいい\nロードは毎回必要\n\n\nlibrary()関数でロードする：\n\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "day2/index.html#tidyverse",
    "href": "day2/index.html#tidyverse",
    "title": "データサイエンス",
    "section": "tidyverse",
    "text": "tidyverse\n\ntidyverseはデータサイエンス用パッケージの集まりのパッケージ\n\nggplot2（可視化）\ndplyr（データの整理）\nstringr（文字データを扱う）\nなど\n\n\nこれからよく使うので、インストールしましょう。一気に出来るから、楽。\n\ninstall.packages(\"tidyverse\")"
  },
  {
    "objectID": "day2/index.html#install.packagesとlibraryの違い",
    "href": "day2/index.html#install.packagesとlibraryの違い",
    "title": "データサイエンス",
    "section": "install.packages()とlibrary()の違い",
    "text": "install.packages()とlibrary()の違い\n\ninstall.packages()は一回だけで良い（パソコンにパッケージをダウンロードする）\nlibrary()はRを使う毎にしないといけない（パッケージを今回のRのセッションで使えるようにする）"
  },
  {
    "objectID": "day4/index.html#rstudioのデフォルト設定を-変えましょう",
    "href": "day4/index.html#rstudioのデフォルト設定を-変えましょう",
    "title": "データサイエンス",
    "section": "RStudioのデフォルト設定を変えましょう",
    "text": "RStudioのデフォルト設定を変えましょう\n前のセッションのデータが残っていることは再現的にダメ！\n\nTools → Global Options → General → Workspace\n\n“Restore .RData into workspace at startup” → 外す\n“Save workspace to .RData on exit:” → “Never”"
  },
  {
    "objectID": "day4/index.html#rstudioのデフォルト設定を-変えましょう-1",
    "href": "day4/index.html#rstudioのデフォルト設定を-変えましょう-1",
    "title": "データサイエンス",
    "section": "RStudioのデフォルト設定を変えましょう",
    "text": "RStudioのデフォルト設定を変えましょう\n前のセッションのデータが残っていることは再現の観点からダメ！"
  },
  {
    "objectID": "day4/index.html#データの整理data-wrangling",
    "href": "day4/index.html#データの整理data-wrangling",
    "title": "データサイエンス",
    "section": "データの整理（Data Wrangling）",
    "text": "データの整理（Data Wrangling）\n\nデータが手に入る時、まだ解析に使いえない状態が多い\nデータの整理（「wrangling」）は解析に使えるように整えるプロセス\n\n元々はカウボーイが牛を扱う技術から来る"
  },
  {
    "objectID": "day4/index.html#今日のデータセット",
    "href": "day4/index.html#今日のデータセット",
    "title": "データサイエンス",
    "section": "今日のデータセット",
    "text": "今日のデータセット\n\nR4DS第３章で使われているデータは２０１３年にニューヨーク市発着のフライト\nこのデータはncyflights13というパッケージに入っている"
  },
  {
    "objectID": "day4/index.html#チャレンジ",
    "href": "day4/index.html#チャレンジ",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\nncyflights13パッケージをインストールして、nycflights.Rというスクリプトでパッケージをロードしてください"
  },
  {
    "objectID": "day4/index.html#今日のデータセット-1",
    "href": "day4/index.html#今日のデータセット-1",
    "title": "データサイエンス",
    "section": "今日のデータセット",
    "text": "今日のデータセット\nデータはflightsというデータフレームに入っている：\n\nlibrary(nycflights13)\nlibrary(tidyverse)\n\nflights\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#データ整理の関数",
    "href": "day4/index.html#データ整理の関数",
    "title": "データサイエンス",
    "section": "データ整理の関数",
    "text": "データ整理の関数\nこれから学ぶ関数の共通点：\n\nデータフレームをインプットとし、データフレームを返す\n最初の引数がインプットのデータフレーム\n他の引数は詳細（行の名前に引用符を使わない）"
  },
  {
    "objectID": "day4/index.html#filterで行を絞り込む",
    "href": "day4/index.html#filterで行を絞り込む",
    "title": "データサイエンス",
    "section": "filter()で行を絞り込む",
    "text": "filter()で行を絞り込む\n\n生データが必要以上に多い場合がよくある（特に、「ビッグデータ」を扱っているとき）\nfilter()で条件を定めて、その行だけに絞り込む"
  },
  {
    "objectID": "day4/index.html#filterで行を絞り込む-1",
    "href": "day4/index.html#filterで行を絞り込む-1",
    "title": "データサイエンス",
    "section": "filter()で行を絞り込む",
    "text": "filter()で行を絞り込む\n\n元のデータは変わっていない\nfilter()の出力を保存したい時は&lt;-を使う"
  },
  {
    "objectID": "day4/index.html#データの比較",
    "href": "day4/index.html#データの比較",
    "title": "データサイエンス",
    "section": "データの比較",
    "text": "データの比較\nデータの比較を行う主な記号：\n\n&gt; より大きい\n&lt; より小さい\n== イコール （=ではない！）\n| あるいは\n& そして（複数条件の指定）\n\n比較の記号のアウトプットは論理ベクトル"
  },
  {
    "objectID": "day4/index.html#チャレンジ-1",
    "href": "day4/index.html#チャレンジ-1",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\n何故11 = 10がエラーになってしまう？"
  },
  {
    "objectID": "day4/index.html#チャレンジ-2",
    "href": "day4/index.html#チャレンジ-2",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\n\n１月のフライトに絞っとください\n\n\n\nfilter(flights, month == 1)\n\n# A tibble: 27,004 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 26,994 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#チャレンジ-3",
    "href": "day4/index.html#チャレンジ-3",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\n\n１月１日のフライトに絞っとください\n\n\n\nfilter(flights, month == 1 & day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#filterで行を絞り込む-2",
    "href": "day4/index.html#filterで行を絞り込む-2",
    "title": "データサイエンス",
    "section": "filter()で行を絞り込む",
    "text": "filter()で行を絞り込む\nもう一つの複数条件を設定方法：,で条件を加える（filter()だけ）\n\nfilter(flights, month == 1, day == 1)\n\n# A tibble: 842 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 832 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#arrangeで行を並べ替える",
    "href": "day4/index.html#arrangeで行を並べ替える",
    "title": "データサイエンス",
    "section": "arrange()で行を並べ替える",
    "text": "arrange()で行を並べ替える\n\n# 出発の日と時間で並べ替える\narrange(flights, year, month, day, dep_time)\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#arrangeで行を並べ替える-1",
    "href": "day4/index.html#arrangeで行を並べ替える-1",
    "title": "データサイエンス",
    "section": "arrange()で行を並べ替える",
    "text": "arrange()で行を並べ替える\n\narrange()はデフォルトで小さい方からの順になっている\n大きい方から並べたい時はdesc()（「descend」、「降りる」）を使う：\n\n\n# 大きく遅れた順で並べる\narrange(flights, desc(dep_delay))\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     9      641            900      1301     1242           1530\n 2  2013     6    15     1432           1935      1137     1607           2120\n 3  2013     1    10     1121           1635      1126     1239           1810\n 4  2013     9    20     1139           1845      1014     1457           2210\n 5  2013     7    22      845           1600      1005     1044           1815\n 6  2013     4    10     1100           1900       960     1342           2211\n 7  2013     3    17     2321            810       911      135           1020\n 8  2013     6    27      959           1900       899     1236           2226\n 9  2013     7    22     2257            759       898      121           1026\n10  2013    12     5      756           1700       896     1058           2020\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#チャレンジ-4",
    "href": "day4/index.html#チャレンジ-4",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\n\nfilter()とarrange()を使って、12月のフライトに絞ってから、遠く飛んだ順に並べ替えてください"
  },
  {
    "objectID": "day4/index.html#パイプにつて",
    "href": "day4/index.html#パイプにつて",
    "title": "データサイエンス",
    "section": "パイプにつて",
    "text": "パイプにつて\n\nfilter(データ, 条件)というような書き方をしてきたが、また別の書き方がある：\n\nデータ |&gt; filter(条件)"
  },
  {
    "objectID": "day4/index.html#パイプにつて-1",
    "href": "day4/index.html#パイプにつて-1",
    "title": "データサイエンス",
    "section": "パイプにつて",
    "text": "パイプにつて\n\n|&gt;は「パイプ」と呼ばれる\n左にある物を右の方に渡す\n「それから」と読む"
  },
  {
    "objectID": "day4/index.html#いつパイプを使う",
    "href": "day4/index.html#いつパイプを使う",
    "title": "データサイエンス",
    "section": "いつパイプを使う？",
    "text": "いつパイプを使う？\n\n複数の作業を施すに便利\n\n「パイプライン」\n\n\n\n# flightsから始まって、12月のデータに絞ってから、遠く飛んだ距離の順で並べる\nflights |&gt;\n  filter(month == 12) |&gt;\n  arrange(desc(distance))\n\n# A tibble: 28,135 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013    12     1      928            930        -2     1532           1535\n 2  2013    12     2      920            930       -10     1525           1535\n 3  2013    12     4      933            930         3     1519           1535\n 4  2013    12     5      920            930       -10     1609           1535\n 5  2013    12     6      924            930        -6     1545           1535\n 6  2013    12     7      927            930        -3     1549           1535\n 7  2013    12     8      935            930         5     1520           1535\n 8  2013    12     9      928            930        -2     1528           1535\n 9  2013    12    11      930            930         0     1539           1535\n10  2013    12    13      929            930        -1     1527           1535\n# ℹ 28,125 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#mutateで新しい列を計算する",
    "href": "day4/index.html#mutateで新しい列を計算する",
    "title": "データサイエンス",
    "section": "mutate()で新しい列を計算する",
    "text": "mutate()で新しい列を計算する\n\n新しい列は右側から追加される\n\n列が多い場合は見えないことも\n\n\n\nflights |&gt; \n  mutate(speed = distance / air_time * 60)\n\n# A tibble: 336,776 × 20\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 12 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, speed &lt;dbl&gt;"
  },
  {
    "objectID": "day4/index.html#mutateで新しい列を計算する-1",
    "href": "day4/index.html#mutateで新しい列を計算する-1",
    "title": "データサイエンス",
    "section": "mutate()で新しい列を計算する",
    "text": "mutate()で新しい列を計算する\n\n.beforeを使うと、新しい列が入る場所を指定できる\n\n\nflights |&gt; \n  mutate(\n    speed = distance / air_time * 60,\n    .before = 1)\n\n# A tibble: 336,776 × 20\n   speed  year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  370.  2013     1     1      517            515         2      830\n 2  374.  2013     1     1      533            529         4      850\n 3  408.  2013     1     1      542            540         2      923\n 4  517.  2013     1     1      544            545        -1     1004\n 5  394.  2013     1     1      554            600        -6      812\n 6  288.  2013     1     1      554            558        -4      740\n 7  404.  2013     1     1      555            600        -5      913\n 8  259.  2013     1     1      557            600        -3      709\n 9  405.  2013     1     1      557            600        -3      838\n10  319.  2013     1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day4/index.html#mutateで新しい列を計算する-2",
    "href": "day4/index.html#mutateで新しい列を計算する-2",
    "title": "データサイエンス",
    "section": "mutate()で新しい列を計算する",
    "text": "mutate()で新しい列を計算する\n\nfilter()（と他のデータ整理用関数と同じように）、mutate()の出力は元のデータを触らない\n解析結果を保存したい時は&lt;-を使う"
  },
  {
    "objectID": "day4/index.html#selectで列を絞る",
    "href": "day4/index.html#selectで列を絞る",
    "title": "データサイエンス",
    "section": "select()で列を絞る",
    "text": "select()で列を絞る\n\n生データにたくさんの列が入っている場合がよくある。解析に必要な列だけに絞った方が解析がやりやすい\n基本的な使い方：列名で選択する\n\n\nflights |&gt; \n  select(year, month, day)\n\n# A tibble: 336,776 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "day4/index.html#selectで列を絞る-1",
    "href": "day4/index.html#selectで列を絞る-1",
    "title": "データサイエンス",
    "section": "select()で列を絞る",
    "text": "select()で列を絞る\n\n選択したい列が多い場合は、:を使ってどこから〜どこまでというふうに書くと便利：\n\n\nflights |&gt; \n  select(year:day)\n\n# A tibble: 336,776 × 3\n    year month   day\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "day4/index.html#チャレンジ-5",
    "href": "day4/index.html#チャレンジ-5",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\nJFKから出発したフライトに絞ってから、速度を計算してから、早い速度の順に並べ替えてください"
  },
  {
    "objectID": "day4/index.html#まとめ今日学んだ関数動詞",
    "href": "day4/index.html#まとめ今日学んだ関数動詞",
    "title": "データサイエンス",
    "section": "まとめ：今日学んだ関数（動詞）",
    "text": "まとめ：今日学んだ関数（動詞）\n\n行を扱う関数\n\nfilter()\narrange()\n\n列を扱う関数\n\nmutate()\nselect()\n\n集計の関数\n\nsummarize()\ngroup_by()\nungroup()"
  },
  {
    "objectID": "day4/index.html#まとめ",
    "href": "day4/index.html#まとめ",
    "title": "データサイエンス",
    "section": "まとめ",
    "text": "まとめ\n\n|&gt;とデータ整理用の関数を組み合わせることによって、すぐにでもかなり高度なデータ解析のパイプラインができるようなる。\n初めての方にはとてもコードの量が多いように思えるでしょうが、このようなツールを毎日使うって、慣れていくとそのうちどのようなデータでもRで扱えるようになる！"
  },
  {
    "objectID": "day3/index.html#スクリプトについて",
    "href": "day3/index.html#スクリプトについて",
    "title": "データサイエンス",
    "section": "スクリプトについて",
    "text": "スクリプトについて\n\n今までは直接Rにコマンドを出していたけど、毎回そうするのは効率が良くない。\n作業を繰り返す場合や再現する場合はスクリプト(テキストファイル)が必要。\nRスクリプトの拡張は.Rか.r。"
  },
  {
    "objectID": "day3/index.html#スクリプトの作成と保存",
    "href": "day3/index.html#スクリプトの作成と保存",
    "title": "データサイエンス",
    "section": "スクリプトの作成と保存",
    "text": "スクリプトの作成と保存\n\n作成\n\nFile ➡︎ New File ➡︎ R Scriptをクリック\n\n保存\n\nFile ➡︎ Save As...をクリックかファイルのアイコンをクリック。\n\nスクリプトの名前はなるべくローマ字を使うように（あとあと公開する時のため）"
  },
  {
    "objectID": "day3/index.html#スクリプトからコードを使う",
    "href": "day3/index.html#スクリプトからコードを使う",
    "title": "データサイエンス",
    "section": "スクリプトからコードを使う",
    "text": "スクリプトからコードを使う\n以下のコードをスクリプトに書いて、script.Rとしてデスクトップに保存しましょう（コードの詳細はまた後で学ぶ）。\n\nlibrary(tidyverse)\n\nggplot(diamonds, aes(x = carat, y = price)) + \n  geom_hex()"
  },
  {
    "objectID": "day3/index.html#スクリプトからコードを使う-1",
    "href": "day3/index.html#スクリプトからコードを使う-1",
    "title": "データサイエンス",
    "section": "スクリプトからコードを使う",
    "text": "スクリプトからコードを使う\n\nカーソルが現在位置している行をコンソールに送る：Ctrl（あるいは⌘） + Enter\n今開いているスクリプトの行を全てコンソールに送る：Ctrl（あるいは⌘） + Shift+ Enter"
  },
  {
    "objectID": "day3/index.html#rstudioによる警告",
    "href": "day3/index.html#rstudioによる警告",
    "title": "データサイエンス",
    "section": "RStudioによる警告",
    "text": "RStudioによる警告\nスクリプトに間違いが入っている場合、RStudioはそれを教えてくれる（バツマークと赤い線）："
  },
  {
    "objectID": "day3/index.html#スクリプトの書き方",
    "href": "day3/index.html#スクリプトの書き方",
    "title": "データサイエンス",
    "section": "スクリプトの書き方",
    "text": "スクリプトの書き方\n\n読みやすさと覚えやすさを優先しましょう。\nRは大文字と小文字を区別するので、小文字に揃えた方が覚えやく、間違いが少ない（例えば、Dataではなく、data）。\n変数名にはスペースが使えないので、_を使いましょう（例えば、data_set_1など）。"
  },
  {
    "objectID": "day3/index.html#スクリプトの書き方-1",
    "href": "day3/index.html#スクリプトの書き方-1",
    "title": "データサイエンス",
    "section": "スクリプトの書き方",
    "text": "スクリプトの書き方\n\nコメント（Rが無視する場所）を#で書く\n\n例えば、# this is a comment\n\nコメントは自分用のメモ\n\n未来の自分が、今の自分が何をやったのか、分かるように書く。\nまだ慣れていないうちには特にたくさん書きましょう。"
  },
  {
    "objectID": "day3/index.html#ファイル名も整えましょう",
    "href": "day3/index.html#ファイル名も整えましょう",
    "title": "データサイエンス",
    "section": "ファイル名も整えましょう",
    "text": "ファイル名も整えましょう\n\n\nNG ❌\nalternative model.R\ncode for exploratory analysis.r\nfinalreport.qmd\nFinalReport.qmd\nfig 1.png\nFigure_02.png\nmodel_first_try.R\nrun-first.r\ntemp.txt\n\nOK ✅\n01_load_data.R\n02_exploratory_analysis.R\n03_model_approach_1.R\n04_model_approach_2.R\nfig_01.png\nfig_02.png\nreport_2022_03_20.qmd\nreport_2022_04_02.qmd\nreport_draft_notes.txt"
  },
  {
    "objectID": "day3/index.html#プロジェクトについて",
    "href": "day3/index.html#プロジェクトについて",
    "title": "データサイエンス",
    "section": "プロジェクトについて",
    "text": "プロジェクトについて\n\nスクリプトとしてコードを保存をするのはいいけど、解析が進むと複数のスクリプトとデータを整理する必要が生じる\nRStudioの「Project」機能によって、スクリプトとデータ（など）の整理ができる"
  },
  {
    "objectID": "day3/index.html#新しいプロジェクトを作る",
    "href": "day3/index.html#新しいプロジェクトを作る",
    "title": "データサイエンス",
    "section": "新しいプロジェクトを作る",
    "text": "新しいプロジェクトを作る\n\nFile ➡︎ New Project ➡︎ New Directory ➡︎ New Project をクリック\n\nプロジェクト名と場所を入力（今回はr4dsにしましょう）\n分かりやすい場所がおすすめ（デスクトップにしましょう）\n\n今回は”Create a git repository”をクリックしないけど、本当はgitも使った方がいい（またあとで説明します）"
  },
  {
    "objectID": "day3/index.html#新しいプロジェクトを作る-1",
    "href": "day3/index.html#新しいプロジェクトを作る-1",
    "title": "データサイエンス",
    "section": "新しいプロジェクトを作る",
    "text": "新しいプロジェクトを作る\n\nプロジェクト名の入力が終わると、RStudioが再度立ち上がる\nファイルパネル（右下）をよく見てください。今はRがどこに「います」か？"
  },
  {
    "objectID": "day3/index.html#新しいプロジェクトを作る-2",
    "href": "day3/index.html#新しいプロジェクトを作る-2",
    "title": "データサイエンス",
    "section": "新しいプロジェクトを作る",
    "text": "新しいプロジェクトを作る\n\n右下の「ファイル」パネルを使って、dataというフォルダーを作りましょう\n\nあとで、このフォルダーにこれから解析するデータを置く"
  },
  {
    "objectID": "day3/index.html#rprojファイルについて",
    "href": "day3/index.html#rprojファイルについて",
    "title": "データサイエンス",
    "section": ".Rprojファイルについて",
    "text": ".Rprojファイルについて\n\n新しいプロジェクトには、r4ds.Rprojファイルが入っている\n.Rprojファイルの中身はは基本的に触らない\n\n中身はRStudioの設定（RStudioに任せましょう）\n再度プロジェクトを開く時に使う（ダブルクリック）"
  },
  {
    "objectID": "day3/index.html#作業ディレクトリについて",
    "href": "day3/index.html#作業ディレクトリについて",
    "title": "データサイエンス",
    "section": "作業ディレクトリについて",
    "text": "作業ディレクトリについて\n\n「作業ディレクトリ」（“working directory”）というのは、今Rが今「いる」場所のこと\ngetwd()で確認できる：\n\n\ngetwd()\n\n\n\n[1] \"/Users/joelnitta/Desktop/r4ds\""
  },
  {
    "objectID": "day3/index.html#作業ディレクトリについて-1",
    "href": "day3/index.html#作業ディレクトリについて-1",
    "title": "データサイエンス",
    "section": "作業ディレクトリについて",
    "text": "作業ディレクトリについて\n\n時々、他のスクリプトを見ると、set.wd()という関数を目にする\n\n例：set.wd(\"/Users/joelnitta/analysis/\")\n後ろの部分は「パス」と言う（パソコンの中の住所のような物）"
  },
  {
    "objectID": "day3/index.html#作業ディレクトリについて-2",
    "href": "day3/index.html#作業ディレクトリについて-2",
    "title": "データサイエンス",
    "section": "作業ディレクトリについて",
    "text": "作業ディレクトリについて\n\nでも、多くの場合、他の人のパソコンにあるパスは自分のパソコンに存在しない\n\n.Rprojを使えば、set.wd()を使う必要がない\n\nなので、set.wd()は使わないようにしましょう。"
  },
  {
    "objectID": "day3/index.html#プロジェクトにスクリプトを置きましょう",
    "href": "day3/index.html#プロジェクトにスクリプトを置きましょう",
    "title": "データサイエンス",
    "section": "プロジェクトにスクリプトを置きましょう",
    "text": "プロジェクトにスクリプトを置きましょう\n以下のコードを書いて、スクリプトをdiamonds.Rとしてr4dsプロジェクトに保存して、実行しましょう：\n\nlibrary(tidyverse)\n\nggplot(diamonds, aes(x = carat, y = price)) + \n  geom_hex()\nggsave(\"diamonds.png\")\n\nwrite_csv(diamonds, \"data/diamonds.csv\")\n\nこのスクリプトは何をするのでしょうか？"
  },
  {
    "objectID": "day3/index.html#コードによる再現性",
    "href": "day3/index.html#コードによる再現性",
    "title": "データサイエンス",
    "section": "コードによる再現性",
    "text": "コードによる再現性\n\ndiamonds.Rはdiamonds.pngというグラフを作る。\n\n\n\ndiamonds.pngを消しましょう。\n\n\n\n\n解析結果が消えてしまった！どうしよう！？"
  },
  {
    "objectID": "day3/index.html#コードによる再現性-1",
    "href": "day3/index.html#コードによる再現性-1",
    "title": "データサイエンス",
    "section": "コードによる再現性",
    "text": "コードによる再現性\n\nご心配なく！\n\n再度diamonds.Rを実行してください（Ctrl（あるいは⌘） + Shift+ Enter）\n\n全く同じグラフが再度できた！つまり、再現しました。\n\n\n\nコードとデータがあれば、解析結果はいつでも再現できる\n\n\n\n\n絶対に必要なのは、コードとデータ。結果は「使い捨て」と考えて良い。"
  },
  {
    "objectID": "day3/index.html#ディスカッション",
    "href": "day3/index.html#ディスカッション",
    "title": "データサイエンス",
    "section": "ディスカッション",
    "text": "ディスカッション\n\nデータ整理やプロジェクトの管理はどうしていますか？"
  },
  {
    "objectID": "day3/index.html#データの読み込み",
    "href": "day3/index.html#データの読み込み",
    "title": "データサイエンス",
    "section": "データの読み込み",
    "text": "データの読み込み\n\nMoodleからstudents.csvをダウンロードして、data/に置きましょう。\n.csvはcomma separated valuesの略です\n\nエクセルで扱うようなデータ形式（エクセルでも開くことができる）\n.xslxとの違いは、.csvはそのままどのテキストエディターでも開ける（エクセルがいらない）"
  },
  {
    "objectID": "day3/index.html#データの読み込み-1",
    "href": "day3/index.html#データの読み込み-1",
    "title": "データサイエンス",
    "section": "データの読み込み",
    "text": "データの読み込み\n\nread_csv()関数で読み込む\n\nまずは、読み込んでから直接に中身を見てみましょう：\n\nread_csv(\"data/students.csv\")\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6"
  },
  {
    "objectID": "day3/index.html#読み込んだデータの保存",
    "href": "day3/index.html#読み込んだデータの保存",
    "title": "データサイエンス",
    "section": "読み込んだデータの保存",
    "text": "読み込んだデータの保存\n\nでも、これだけではRの環境にそのデータが入っていません\n変数（オブジェクト）として保存する必要がある：\n\n\nstudents &lt;- read_csv(\"data/students.csv\")"
  },
  {
    "objectID": "day3/index.html#読み込んだデータの中身の確認１",
    "href": "day3/index.html#読み込んだデータの中身の確認１",
    "title": "データサイエンス",
    "section": "読み込んだデータの中身の確認（１）",
    "text": "読み込んだデータの中身の確認（１）\n\n変数として保存する時は中身が見えない（オブジェクトに渡された）\n中身を見たい時は変数名を直接コンソールに入力すればいい\n\n\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6"
  },
  {
    "objectID": "day3/index.html#コンソールの使い方使うとき",
    "href": "day3/index.html#コンソールの使い方使うとき",
    "title": "データサイエンス",
    "section": "コンソールの使い方（使うとき）",
    "text": "コンソールの使い方（使うとき）\n\nこのような時に使う：データの中身を確認したい、ヘルプファイルを開きたい、など。\nつまり、データ解析に必要ではない（関係のない）コマンド。"
  },
  {
    "objectID": "day3/index.html#読み込んだデータの中身の確認２",
    "href": "day3/index.html#読み込んだデータの中身の確認２",
    "title": "データサイエンス",
    "section": "読み込んだデータの中身の確認（２）",
    "text": "読み込んだデータの中身の確認（２）\n\nもう一つのデータの確認の仕方がある：「Environment」パネルでそのオブジェクトをクリック\nすると、エクセルのようなレイアウトになる\n\nエクセルと大きな違い：直接にデータをいじることができない！\n\n\n\n\nエクセルはデータ入力に使う。Rはデータ解析に使う"
  },
  {
    "objectID": "day3/index.html#データの種類型について",
    "href": "day3/index.html#データの種類型について",
    "title": "データサイエンス",
    "section": "データの種類（型）について",
    "text": "データの種類（型）について\n\nstudentsをコンソール（左下のパネル）でもう一回打ってみてください\nデータの上に&lt;dbl&gt;とか&lt;chr&gt;とかと出ているけど、これは何でしょうか？\n\n\n\nA: データの種類です"
  },
  {
    "objectID": "day3/index.html#データの種類型について-1",
    "href": "day3/index.html#データの種類型について-1",
    "title": "データサイエンス",
    "section": "データの種類（型）について",
    "text": "データの種類（型）について\n\ndbl: 数字（“double”の略。なぜ”double”でしょう・・）\nchr: 文字（“character”の略。この方がしっくり来るね）\n\nこのほかに、\n\nlgl：ロジカル（TRUEかFALSEか、そのどっちか）\nint：整数（“integer”の略）\n\nがある"
  },
  {
    "objectID": "day3/index.html#ベクトルについて",
    "href": "day3/index.html#ベクトルについて",
    "title": "データサイエンス",
    "section": "ベクトルについて",
    "text": "ベクトルについて\n\nベクトル（vector）とは、同じ型を持つ一連のデータの集まり（一次元の配列）\nベクトルに含まれている一つ一つのデータを要素（element）という\n例えば、letters\n\n\"a\"がlettersの１個目の要素"
  },
  {
    "objectID": "day3/index.html#ベクトルの作り方",
    "href": "day3/index.html#ベクトルの作り方",
    "title": "データサイエンス",
    "section": "ベクトルの作り方",
    "text": "ベクトルの作り方\n\nベクトルを関数はc()\n\n“combine”（「くっつける」）の略\n\n\n\nc(1, 2, 3)\n\n[1] 1 2 3"
  },
  {
    "objectID": "day3/index.html#ベクトルの作り方-1",
    "href": "day3/index.html#ベクトルの作り方-1",
    "title": "データサイエンス",
    "section": "ベクトルの作り方",
    "text": "ベクトルの作り方\n\n文字列（文字でできているベクトル）を作るときは、引用符をつけないといけない\n\n\nc(\"a\", \"b\", \"c\")\n\n[1] \"a\" \"b\" \"c\""
  },
  {
    "objectID": "day3/index.html#ベクトルの型の確認",
    "href": "day3/index.html#ベクトルの型の確認",
    "title": "データサイエンス",
    "section": "ベクトルの型の確認",
    "text": "ベクトルの型の確認\n\ntypeof()関数でベクトルの型を確認することができる\n\n\ntypeof(letters)\n\n[1] \"character\""
  },
  {
    "objectID": "day3/index.html#チャレンジ",
    "href": "day3/index.html#チャレンジ",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\n\n以下のコードでベクトルを作ると、そのベクトルの型は何でしょうか？\n\n\nc(1, 2, \"c\")"
  },
  {
    "objectID": "day3/index.html#ベクトル変換",
    "href": "day3/index.html#ベクトル変換",
    "title": "データサイエンス",
    "section": "ベクトル変換",
    "text": "ベクトル変換\n\n先も言いましたが、あるベクトルの要素は全て同じ型を持たないといけない\nなので、入力が複数の型を含む場合、Rはそれを同じ型に合わせる\n\n\nx &lt;- c(1, 2, \"c\")\ntypeof(x)\n\n[1] \"character\"\n\n\n\n先のベクトルは文字に変換された"
  },
  {
    "objectID": "day3/index.html#ベクトル型とデータフレーム",
    "href": "day3/index.html#ベクトル型とデータフレーム",
    "title": "データサイエンス",
    "section": "ベクトル型とデータフレーム",
    "text": "ベクトル型とデータフレーム\n\nデータフレームの列は、本当はベクトルになっている\nなので、データフレームの列はそれぞれ、型が決まっている\n\nこれはエクセルと大きな違い"
  },
  {
    "objectID": "day3/index.html#まとめ",
    "href": "day3/index.html#まとめ",
    "title": "データサイエンス",
    "section": "まとめ",
    "text": "まとめ\n\nスクリプト（.Rファイル）に解析に必要なコードを書く\nスクリプトとデータがあれば、解析結果を再現できる\nプロジェクトを使うと、解析の管理が大幅にやりやすくなる\nデータフレームはベクトルからなっている\nベクトルは一つの型しか持てない"
  },
  {
    "objectID": "day3/index.html#宿題",
    "href": "day3/index.html#宿題",
    "title": "データサイエンス",
    "section": "宿題",
    "text": "宿題\n締め切り：2024-04-23 12:50\n\nクイズ（moodle）\n自分のデータを読み込む。\n二つのファイルmoodleにアップロード：\n\nデータのファイル（csv）\n読み込むスクリプト\n\nもしcsvではないファイルを読み込みたければ、連絡してください"
  },
  {
    "objectID": "day5/index.html#データの整理data-wrangling",
    "href": "day5/index.html#データの整理data-wrangling",
    "title": "データサイエンス",
    "section": "データの整理（Data Wrangling）",
    "text": "データの整理（Data Wrangling）\n\nデータが手に入る時、まだ解析に使いえない状態が多い\nデータの整理（「wrangling」）は解析に使えるように整えるプロセス\n\n元々はカウボーイが牛を扱う技術から来る"
  },
  {
    "objectID": "day5/index.html#今日学ぶこと",
    "href": "day5/index.html#今日学ぶこと",
    "title": "データサイエンス",
    "section": "今日学ぶこと",
    "text": "今日学ぶこと\n\nデータの集計\nデータの形の変え方（縦長いから横広いとその逆）\nデータの結合"
  },
  {
    "objectID": "day5/index.html#データの集計",
    "href": "day5/index.html#データの集計",
    "title": "データサイエンス",
    "section": "データの集計",
    "text": "データの集計\nsummarize()でデータの集計ができる：\n\nlibrary(nycflights13)\nlibrary(tidyverse)\n\nsummarize(flights, mean_sched_dep_time = mean(sched_dep_time))\n\n# A tibble: 1 × 1\n  mean_sched_dep_time\n                &lt;dbl&gt;\n1               1344."
  },
  {
    "objectID": "day5/index.html#グループ化",
    "href": "day5/index.html#グループ化",
    "title": "データサイエンス",
    "section": "グループ化",
    "text": "グループ化\n\nしかし、全体の平均だけを計算してもあまり意味はない。\nそれよりも、何か毎にデータの集計を行いたい方が多い。\nそれにはgroup_by()関数を使う。例えば、月ごと。まずはデータのグループを指定する："
  },
  {
    "objectID": "day5/index.html#グループ化してから集計する",
    "href": "day5/index.html#グループ化してから集計する",
    "title": "データサイエンス",
    "section": "グループ化してから、集計する",
    "text": "グループ化してから、集計する\n次に、集計する：\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay)\n  )\n\n# A tibble: 12 × 2\n   month avg_delay\n   &lt;int&gt;     &lt;dbl&gt;\n 1     1        NA\n 2     2        NA\n 3     3        NA\n 4     4        NA\n 5     5        NA\n 6     6        NA\n 7     7        NA\n 8     8        NA\n 9     9        NA\n10    10        NA\n11    11        NA\n12    12        NA"
  },
  {
    "objectID": "day5/index.html#どこがnaだったのかをfilterで確かめる",
    "href": "day5/index.html#どこがnaだったのかをfilterで確かめる",
    "title": "データサイエンス",
    "section": "どこがNAだったのかをfilter()で確かめる",
    "text": "どこがNAだったのかをfilter()で確かめる\n\nflights |&gt;\n  filter(is.na(dep_delay))\n\n# A tibble: 8,255 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1  2013     1     1       NA           1630        NA       NA\n 2  2013     1     1       NA           1935        NA       NA\n 3  2013     1     1       NA           1500        NA       NA\n 4  2013     1     1       NA            600        NA       NA\n 5  2013     1     2       NA           1540        NA       NA\n 6  2013     1     2       NA           1620        NA       NA\n 7  2013     1     2       NA           1355        NA       NA\n 8  2013     1     2       NA           1420        NA       NA\n 9  2013     1     2       NA           1321        NA       NA\n10  2013     1     2       NA           1545        NA       NA\n# ℹ 8,245 more rows\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,\n#   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "day5/index.html#nでグループの件数を数える",
    "href": "day5/index.html#nでグループの件数を数える",
    "title": "データサイエンス",
    "section": "n()でグループの件数を数える",
    "text": "n()でグループの件数を数える\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE),\n    n = n()\n  )\n\n# A tibble: 12 × 3\n   month avg_delay     n\n   &lt;int&gt;     &lt;dbl&gt; &lt;int&gt;\n 1     1     10.0  27004\n 2     2     10.8  24951\n 3     3     13.2  28834\n 4     4     13.9  28330\n 5     5     13.0  28796\n 6     6     20.8  28243\n 7     7     21.7  29425\n 8     8     12.6  29327\n 9     9      6.72 27574\n10    10      6.24 28889\n11    11      5.44 27268\n12    12     16.6  28135"
  },
  {
    "objectID": "day5/index.html#ungroupでグループを解除する",
    "href": "day5/index.html#ungroupでグループを解除する",
    "title": "データサイエンス",
    "section": "ungroup()でグループを解除する",
    "text": "ungroup()でグループを解除する\n\nグループ毎の計算が終わったら、ungroup()でグループの解除をする必要がある場合がある。\n\n（以下のコードでは自動的にグループが解除されるので本当はいらないけど、必要な場合もある）\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE)\n  ) |&gt;\n  ungroup()\n\n# A tibble: 12 × 2\n   month avg_delay\n   &lt;int&gt;     &lt;dbl&gt;\n 1     1     10.0 \n 2     2     10.8 \n 3     3     13.2 \n 4     4     13.9 \n 5     5     13.0 \n 6     6     20.8 \n 7     7     21.7 \n 8     8     12.6 \n 9     9      6.72\n10    10      6.24\n11    11      5.44\n12    12     16.6"
  },
  {
    "objectID": "day5/index.html#複数条件でグループ分けする",
    "href": "day5/index.html#複数条件でグループ分けする",
    "title": "データサイエンス",
    "section": "複数条件でグループ分けする",
    "text": "複数条件でグループ分けする\n\ndaily &lt;-\n  flights |&gt;\n  group_by(year, month, day)\n\n\nsummarize(daily, n = n())\n\n# A tibble: 365 × 4\n# Groups:   year, month [12]\n    year month   day     n\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  2013     1     1   842\n 2  2013     1     2   943\n 3  2013     1     3   914\n 4  2013     1     4   915\n 5  2013     1     5   720\n 6  2013     1     6   832\n 7  2013     1     7   933\n 8  2013     1     8   899\n 9  2013     1     9   902\n10  2013     1    10   932\n# ℹ 355 more rows"
  },
  {
    "objectID": "day5/index.html#ungroupでグループを解除する-1",
    "href": "day5/index.html#ungroupでグループを解除する-1",
    "title": "データサイエンス",
    "section": "ungroup()でグループを解除する",
    "text": "ungroup()でグループを解除する\n\ndaily |&gt;\n  ungroup() |&gt;\n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE),\n    n = n()\n  )\n\n# A tibble: 1 × 2\n  avg_delay      n\n      &lt;dbl&gt;  &lt;int&gt;\n1      12.6 336776"
  },
  {
    "objectID": "day5/index.html#データの形を変える",
    "href": "day5/index.html#データの形を変える",
    "title": "データサイエンス",
    "section": "データの形を変える",
    "text": "データの形を変える\n\n同じデータを様々な形で表すことができる。\n例えば、以下の結核のデータを見ましょう（tidyverseのtidyrパッケージに入っている例のデータセット）：\n\n\ntable1\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583"
  },
  {
    "objectID": "day5/index.html#データの形を変える-1",
    "href": "day5/index.html#データの形を変える-1",
    "title": "データサイエンス",
    "section": "データの形を変える",
    "text": "データの形を変える\n\n元々のデータが同じであることは確認できましたか？\nでも、table1とtable2には大事な違いがある：\n\ntable1だけがtidy（すぐに解析できるように整っている）になっている"
  },
  {
    "objectID": "day5/index.html#tidyなデータの定義",
    "href": "day5/index.html#tidyなデータの定義",
    "title": "データサイエンス",
    "section": "tidyなデータの定義",
    "text": "tidyなデータの定義\n\n各列が変数を表している\n各行が観察を表している\n各セルが一つの値を表している"
  },
  {
    "objectID": "day5/index.html#tidyなデータの利点",
    "href": "day5/index.html#tidyなデータの利点",
    "title": "データサイエンス",
    "section": "tidyなデータの利点",
    "text": "tidyなデータの利点\n\n今まで学んできた関数（mutate()、filter()など）はtidyなデータの方が使いやすい\nグラフを作成する際も、tidyなデータの方が使いやすいです\n\n例えば：\n\n# 1万人あたりの病気の発生率を計算する\ntable1 |&gt;\n  mutate(rate = cases / population * 10000)\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67"
  },
  {
    "objectID": "day5/index.html#ワイド横広いデータを縦長ロングに変える",
    "href": "day5/index.html#ワイド横広いデータを縦長ロングに変える",
    "title": "データサイエンス",
    "section": "ワイド（横広い）データを縦長（ロング）に変える",
    "text": "ワイド（横広い）データを縦長（ロング）に変える\nbillboardというデータセットには２０００年の歌のランキングが入っている：\n\nbillboard\n\n# A tibble: 317 × 79\n   artist track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7\n   &lt;chr&gt;  &lt;chr&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 2 Pac  Baby… 2000-02-26      87    82    72    77    87    94    99\n 2 2Ge+h… The … 2000-09-02      91    87    92    NA    NA    NA    NA\n 3 3 Doo… Kryp… 2000-04-08      81    70    68    67    66    57    54\n 4 3 Doo… Loser 2000-10-21      76    76    72    69    67    65    55\n 5 504 B… Wobb… 2000-04-15      57    34    25    17    17    31    36\n 6 98^0   Give… 2000-08-19      51    39    34    26    26    19     2\n 7 A*Tee… Danc… 2000-07-08      97    97    96    95   100    NA    NA\n 8 Aaliy… I Do… 2000-01-29      84    62    51    41    38    35    35\n 9 Aaliy… Try … 2000-03-18      59    53    38    28    21    18    16\n10 Adams… Open… 2000-08-26      76    76    74    69    68    67    61\n# ℹ 307 more rows\n# ℹ 69 more variables: wk8 &lt;dbl&gt;, wk9 &lt;dbl&gt;, wk10 &lt;dbl&gt;, wk11 &lt;dbl&gt;,\n#   wk12 &lt;dbl&gt;, wk13 &lt;dbl&gt;, wk14 &lt;dbl&gt;, wk15 &lt;dbl&gt;, wk16 &lt;dbl&gt;,\n#   wk17 &lt;dbl&gt;, wk18 &lt;dbl&gt;, wk19 &lt;dbl&gt;, wk20 &lt;dbl&gt;, wk21 &lt;dbl&gt;,\n#   wk22 &lt;dbl&gt;, wk23 &lt;dbl&gt;, wk24 &lt;dbl&gt;, wk25 &lt;dbl&gt;, wk26 &lt;dbl&gt;,\n#   wk27 &lt;dbl&gt;, wk28 &lt;dbl&gt;, wk29 &lt;dbl&gt;, wk30 &lt;dbl&gt;, wk31 &lt;dbl&gt;,\n#   wk32 &lt;dbl&gt;, wk33 &lt;dbl&gt;, wk34 &lt;dbl&gt;, wk35 &lt;dbl&gt;, wk36 &lt;dbl&gt;, …"
  },
  {
    "objectID": "day5/index.html#ワイドなデータの例billboard",
    "href": "day5/index.html#ワイドなデータの例billboard",
    "title": "データサイエンス",
    "section": "ワイドなデータの例：billboard",
    "text": "ワイドなデータの例：billboard\n\n列：\n\nartist アーティスト（演奏者）\ntrack 曲名\ndate.entered 最初にランキングに入った日付\nwk1 .. wk76 それぞれの種のランキング\n\n\n列がやたらある。そして、列の名前にデータがある（周目）。これをどうやって別の変数にできるのでしょうか？"
  },
  {
    "objectID": "day5/index.html#ワイドからロングにするのはpivot_longer",
    "href": "day5/index.html#ワイドからロングにするのはpivot_longer",
    "title": "データサイエンス",
    "section": "ワイドからロングにするのはpivot_longer()",
    "text": "ワイドからロングにするのはpivot_longer()\n\npivot_longer()の主な引数：\n\ncols どの列を使う（ロングにする）\nnames_to ロング形式に変換される新しい列の名前\nvalues_to 新しい値の列の名前\n\n\nでや、やって見ましょう"
  },
  {
    "objectID": "day5/index.html#ロングなデータをワイドに変える",
    "href": "day5/index.html#ロングなデータをワイドに変える",
    "title": "データサイエンス",
    "section": "ロングなデータをワイドに変える",
    "text": "ロングなデータをワイドに変える\ncms_patient_experienceというデータセットには患者の経験のデータが入っている\n\ncms_patient_experience\n\n# A tibble: 500 × 5\n   org_pac_id org_nm                 measure_cd measure_title prf_rate\n   &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt;      &lt;chr&gt;            &lt;dbl&gt;\n 1 0446157747 USC CARE MEDICAL GROU… CAHPS_GRP… CAHPS for MI…       63\n 2 0446157747 USC CARE MEDICAL GROU… CAHPS_GRP… CAHPS for MI…       87\n 3 0446157747 USC CARE MEDICAL GROU… CAHPS_GRP… CAHPS for MI…       86\n 4 0446157747 USC CARE MEDICAL GROU… CAHPS_GRP… CAHPS for MI…       57\n 5 0446157747 USC CARE MEDICAL GROU… CAHPS_GRP… CAHPS for MI…       85\n 6 0446157747 USC CARE MEDICAL GROU… CAHPS_GRP… CAHPS for MI…       24\n 7 0446162697 ASSOCIATION OF UNIVER… CAHPS_GRP… CAHPS for MI…       59\n 8 0446162697 ASSOCIATION OF UNIVER… CAHPS_GRP… CAHPS for MI…       85\n 9 0446162697 ASSOCIATION OF UNIVER… CAHPS_GRP… CAHPS for MI…       83\n10 0446162697 ASSOCIATION OF UNIVER… CAHPS_GRP… CAHPS for MI…       63\n# ℹ 490 more rows"
  },
  {
    "objectID": "day5/index.html#cms_patient_experienceの特徴",
    "href": "day5/index.html#cms_patient_experienceの特徴",
    "title": "データサイエンス",
    "section": "cms_patient_experienceの特徴",
    "text": "cms_patient_experienceの特徴\n\n研究の対象となっているのは組織だけど、各組織のデータは６つの行を跨いでいる。\nどうやって一つの組織を一つの列にできる？"
  },
  {
    "objectID": "day5/index.html#ロングからワイドにするのはpivot_wider",
    "href": "day5/index.html#ロングからワイドにするのはpivot_wider",
    "title": "データサイエンス",
    "section": "ロングからワイドにするのはpivot_wider()",
    "text": "ロングからワイドにするのはpivot_wider()\n\npivot_wider()の主な引数：\n\ncols どの列を使う（ワイドにする）\nnames_from 列名として使用するロング形式の列名\nvalues_from 新しい列に配置される値を持つロング形式の列\n\n\nでや、やって見ましょう"
  },
  {
    "objectID": "day5/index.html#id_colsで行を識別する列を指定する",
    "href": "day5/index.html#id_colsで行を識別する列を指定する",
    "title": "データサイエンス",
    "section": "id_colsで行を識別する列を指定する",
    "text": "id_colsで行を識別する列を指定する\n\ncms_patient_experience |&gt;\n  pivot_wider(\n    names_from = measure_cd,\n    values_from = prf_rate,\n    id_cols = starts_with(\"org\")\n  )\n\n# A tibble: 95 × 8\n   org_pac_id org_nm   CAHPS_GRP_1 CAHPS_GRP_2 CAHPS_GRP_3 CAHPS_GRP_5\n   &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n 1 0446157747 USC CAR…          63          87          86          57\n 2 0446162697 ASSOCIA…          59          85          83          63\n 3 0547164295 BEAVER …          49          NA          75          44\n 4 0749333730 CAPE PH…          67          84          85          65\n 5 0840104360 ALLIANC…          66          87          87          64\n 6 0840109864 REX HOS…          73          87          84          67\n 7 0840513552 SCL HEA…          58          83          76          58\n 8 0941545784 GRITMAN…          46          86          81          54\n 9 1052612785 COMMUNI…          65          84          80          58\n10 1254237779 OUR LAD…          61          NA          NA          65\n# ℹ 85 more rows\n# ℹ 2 more variables: CAHPS_GRP_8 &lt;dbl&gt;, CAHPS_GRP_12 &lt;dbl&gt;"
  },
  {
    "objectID": "day5/index.html#データの結合",
    "href": "day5/index.html#データの結合",
    "title": "データサイエンス",
    "section": "データの結合",
    "text": "データの結合\n\n多くの場合、使いたいデータが複数のデータセット（データフレーム、あるいはファイル）に跨いで入っている\nしたがって、データの結合（join）を行う必要がある"
  },
  {
    "objectID": "day5/index.html#複数のデータセットの例飛行機のデータ",
    "href": "day5/index.html#複数のデータセットの例飛行機のデータ",
    "title": "データサイエンス",
    "section": "複数のデータセットの例：飛行機のデータ",
    "text": "複数のデータセットの例：飛行機のデータ\nairlinesには航空会社の名前のデータが入っている：\n\nairlines\n\n# A tibble: 16 × 2\n   carrier name                       \n   &lt;chr&gt;   &lt;chr&gt;                      \n 1 9E      Endeavor Air Inc.          \n 2 AA      American Airlines Inc.     \n 3 AS      Alaska Airlines Inc.       \n 4 B6      JetBlue Airways            \n 5 DL      Delta Air Lines Inc.       \n 6 EV      ExpressJet Airlines Inc.   \n 7 F9      Frontier Airlines Inc.     \n 8 FL      AirTran Airways Corporation\n 9 HA      Hawaiian Airlines Inc.     \n10 MQ      Envoy Air                  \n11 OO      SkyWest Airlines Inc.      \n12 UA      United Air Lines Inc.      \n13 US      US Airways Inc.            \n14 VX      Virgin America             \n15 WN      Southwest Airlines Co.     \n16 YV      Mesa Airlines Inc."
  },
  {
    "objectID": "day5/index.html#付け加えたデータが右の方に入る",
    "href": "day5/index.html#付け加えたデータが右の方に入る",
    "title": "データサイエンス",
    "section": "付け加えたデータが右の方に入る",
    "text": "付け加えたデータが右の方に入る\nnycflights13は列の数が多いことを覚えていますか？\n\nこれから新しいデータと結合しても、付け加えたデータが右の方に入るため、結果が見えないので、説明するために小さいバージョンを用意する\n\n\nflights2 &lt;- flights |&gt;\n  select(year, time_hour, origin, dest, tailnum, carrier)"
  },
  {
    "objectID": "day5/index.html#別のデータフレームからデータを加えるleft_join",
    "href": "day5/index.html#別のデータフレームからデータを加えるleft_join",
    "title": "データサイエンス",
    "section": "別のデータフレームからデータを加える：left_join()",
    "text": "別のデータフレームからデータを加える：left_join()\n航空会社の名前を追加しましょう：\n\nflights2 |&gt;\n  left_join(airlines)\n\n# A tibble: 336,776 × 7\n    year time_hour           origin dest  tailnum carrier name        \n   &lt;int&gt; &lt;dttm&gt;              &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;       \n 1  2013 2013-01-01 05:00:00 EWR    IAH   N14228  UA      United Air …\n 2  2013 2013-01-01 05:00:00 LGA    IAH   N24211  UA      United Air …\n 3  2013 2013-01-01 05:00:00 JFK    MIA   N619AA  AA      American Ai…\n 4  2013 2013-01-01 05:00:00 JFK    BQN   N804JB  B6      JetBlue Air…\n 5  2013 2013-01-01 06:00:00 LGA    ATL   N668DN  DL      Delta Air L…\n 6  2013 2013-01-01 05:00:00 EWR    ORD   N39463  UA      United Air …\n 7  2013 2013-01-01 06:00:00 EWR    FLL   N516JB  B6      JetBlue Air…\n 8  2013 2013-01-01 06:00:00 LGA    IAD   N829AS  EV      ExpressJet …\n 9  2013 2013-01-01 06:00:00 JFK    MCO   N593JB  B6      JetBlue Air…\n10  2013 2013-01-01 06:00:00 LGA    ORD   N3ALAA  AA      American Ai…\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "day5/index.html#結合する時は鍵が大事",
    "href": "day5/index.html#結合する時は鍵が大事",
    "title": "データサイエンス",
    "section": "結合する時は「鍵」が大事",
    "text": "結合する時は「鍵」が大事\n上のコードを走らせた際、このメッセージがありました：\nJoining with `by = join_by(carrier)`\n\nつまり、それぞれのデータフレームが共通に持っている列です。これ「鍵」（Key）と呼ぶ。\n共通に持っている列がないと、結合ができない。"
  },
  {
    "objectID": "day5/index.html#結合する時は鍵が大事-1",
    "href": "day5/index.html#結合する時は鍵が大事-1",
    "title": "データサイエンス",
    "section": "結合する時は「鍵」が大事",
    "text": "結合する時は「鍵」が大事\n上のコードは自動的に共通する列を鍵として使ったけど、手動で指定することもできる：\n\nflights2 |&gt;\n  left_join(\n    airlines,\n    by = join_by(carrier))\n\n# A tibble: 336,776 × 7\n    year time_hour           origin dest  tailnum carrier name        \n   &lt;int&gt; &lt;dttm&gt;              &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;       \n 1  2013 2013-01-01 05:00:00 EWR    IAH   N14228  UA      United Air …\n 2  2013 2013-01-01 05:00:00 LGA    IAH   N24211  UA      United Air …\n 3  2013 2013-01-01 05:00:00 JFK    MIA   N619AA  AA      American Ai…\n 4  2013 2013-01-01 05:00:00 JFK    BQN   N804JB  B6      JetBlue Air…\n 5  2013 2013-01-01 06:00:00 LGA    ATL   N668DN  DL      Delta Air L…\n 6  2013 2013-01-01 05:00:00 EWR    ORD   N39463  UA      United Air …\n 7  2013 2013-01-01 06:00:00 EWR    FLL   N516JB  B6      JetBlue Air…\n 8  2013 2013-01-01 06:00:00 LGA    IAD   N829AS  EV      ExpressJet …\n 9  2013 2013-01-01 06:00:00 JFK    MCO   N593JB  B6      JetBlue Air…\n10  2013 2013-01-01 06:00:00 LGA    ORD   N3ALAA  AA      American Ai…\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "day5/index.html#鍵となる列の条件",
    "href": "day5/index.html#鍵となる列の条件",
    "title": "データサイエンス",
    "section": "鍵となる列の条件",
    "text": "鍵となる列の条件\n\n右側のデータの鍵が行を識別できる必要がある。それぞれのcarrierはデータに一回だけ出てくる\ncount()で確かめる（nが全て1になっている）\n\n\nairlines |&gt;\n  count(carrier)\n\n# A tibble: 16 × 2\n   carrier     n\n   &lt;chr&gt;   &lt;int&gt;\n 1 9E          1\n 2 AA          1\n 3 AS          1\n 4 B6          1\n 5 DL          1\n 6 EV          1\n 7 F9          1\n 8 FL          1\n 9 HA          1\n10 MQ          1\n11 OO          1\n12 UA          1\n13 US          1\n14 VX          1\n15 WN          1\n16 YV          1"
  },
  {
    "objectID": "day5/index.html#他のデータに結合してみる",
    "href": "day5/index.html#他のデータに結合してみる",
    "title": "データサイエンス",
    "section": "他のデータに結合してみる",
    "text": "他のデータに結合してみる\nnycflights13パッケージに他のデータフレームがいくつかある："
  },
  {
    "objectID": "day5/index.html#チャレンジ他のデータに結合してみる",
    "href": "day5/index.html#チャレンジ他のデータに結合してみる",
    "title": "データサイエンス",
    "section": "チャレンジ：他のデータに結合してみる",
    "text": "チャレンジ：他のデータに結合してみる\nplanesのデータをflights2に結合することができますか？"
  },
  {
    "objectID": "day6/index.html#データの可視化について",
    "href": "day6/index.html#データの可視化について",
    "title": "データサイエンス",
    "section": "データの可視化について",
    "text": "データの可視化について\n\nEDA（Eploratory Data Analysis）の際、データの可視化が重要なツールになる"
  },
  {
    "objectID": "day6/index.html#ggplot2について",
    "href": "day6/index.html#ggplot2について",
    "title": "データサイエンス",
    "section": "ggplot2について",
    "text": "ggplot2について\n\nRには備え付けの関数、plot()があるが、今回はtidyverseのggplot2パッケージを使う\ngg = “Grammar of Graphics”（画像の文法）\n\n「文法」が分かれば、（ほとんど）どんな図でも作れる"
  },
  {
    "objectID": "day6/index.html#ggplot2について-1",
    "href": "day6/index.html#ggplot2について-1",
    "title": "データサイエンス",
    "section": "ggplot2について",
    "text": "ggplot2について\n図の構造にはいくつか決まった要素がある\n\ngeometry: 図はどのような形にする？\naesthetics: データをどのように図に表す？"
  },
  {
    "objectID": "day6/index.html#geometry",
    "href": "day6/index.html#geometry",
    "title": "データサイエンス",
    "section": "Geometry",
    "text": "Geometry\n\n\nPie chart  \n\nBar graph  \n\n\n\n\n\nhttps://clauswilke.com/dataviz/proportional-ink.html"
  },
  {
    "objectID": "day6/index.html#aesthetics",
    "href": "day6/index.html#aesthetics",
    "title": "データサイエンス",
    "section": "Aesthetics",
    "text": "Aesthetics\n\n\n\n\nhttps://clauswilke.com/dataviz/aesthetic-mapping.html"
  },
  {
    "objectID": "day6/index.html#palmerpenguinsについて",
    "href": "day6/index.html#palmerpenguinsについて",
    "title": "データサイエンス",
    "section": "palmerpenguinsについて",
    "text": "palmerpenguinsについて\n\ninstall.packages(\"palmerpenguins\") # ペンギンのデータ\ninstall.packages(\"ggthemes\") # グラフの色の設定に使う\n\n\npalmerpenguinsパッケージに入っている\n三種類のペンギンのデータ（体重、くちばしや翼の大きさなど）を含む"
  },
  {
    "objectID": "day6/index.html#palmerpenguinsについて-1",
    "href": "day6/index.html#palmerpenguinsについて-1",
    "title": "データサイエンス",
    "section": "palmerpenguinsについて",
    "text": "palmerpenguinsについて\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\nlibrary(tidyverse)\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181\n 2 Adelie  Torgersen           39.5          17.4               186\n 3 Adelie  Torgersen           40.3          18                 195\n 4 Adelie  Torgersen           NA            NA                  NA\n 5 Adelie  Torgersen           36.7          19.3               193\n 6 Adelie  Torgersen           39.3          20.6               190\n 7 Adelie  Torgersen           38.9          17.8               181\n 8 Adelie  Torgersen           39.2          19.6               195\n 9 Adelie  Torgersen           34.1          18.1               193\n10 Adelie  Torgersen           42            20.2               190\n# ℹ 334 more rows\n# ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "day6/index.html#palmerpenguinsについて-2",
    "href": "day6/index.html#palmerpenguinsについて-2",
    "title": "データサイエンス",
    "section": "palmerpenguinsについて",
    "text": "palmerpenguinsについて\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Ad…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39…\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19…\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 46…\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, fe…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, …"
  },
  {
    "objectID": "day6/index.html#palmerpenguinsについて-3",
    "href": "day6/index.html#palmerpenguinsについて-3",
    "title": "データサイエンス",
    "section": "palmerpenguinsについて",
    "text": "palmerpenguinsについて"
  },
  {
    "objectID": "day6/index.html#目的このグラフを作る",
    "href": "day6/index.html#目的このグラフを作る",
    "title": "データサイエンス",
    "section": "目的：このグラフを作る",
    "text": "目的：このグラフを作る"
  },
  {
    "objectID": "day6/index.html#ggplotでグラフの基盤を作る",
    "href": "day6/index.html#ggplotでグラフの基盤を作る",
    "title": "データサイエンス",
    "section": "ggplot()でグラフの基盤を作る",
    "text": "ggplot()でグラフの基盤を作る\n\n\nggplot(data = penguins)"
  },
  {
    "objectID": "day6/index.html#mappingで座標を指定する",
    "href": "day6/index.html#mappingで座標を指定する",
    "title": "データサイエンス",
    "section": "mapping()で座標を指定する",
    "text": "mapping()で座標を指定する\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n)"
  },
  {
    "objectID": "day6/index.html#mappingで座標を指定する-1",
    "href": "day6/index.html#mappingで座標を指定する-1",
    "title": "データサイエンス",
    "section": "mapping()で座標を指定する",
    "text": "mapping()で座標を指定する\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n)"
  },
  {
    "objectID": "day6/index.html#geom_でデータの形を指定する",
    "href": "day6/index.html#geom_でデータの形を指定する",
    "title": "データサイエンス",
    "section": "geom_()でデータの形を指定する",
    "text": "geom_()でデータの形を指定する\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point()"
  },
  {
    "objectID": "day6/index.html#geom_でデータの形を指定する-1",
    "href": "day6/index.html#geom_でデータの形を指定する-1",
    "title": "データサイエンス",
    "section": "geom_()でデータの形を指定する",
    "text": "geom_()でデータの形を指定する\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point()"
  },
  {
    "objectID": "day6/index.html#チャレンジ",
    "href": "day6/index.html#チャレンジ",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\nbill_length_mmを横軸、bill_depth_mmを縦軸にして、点グラフを作成して下さい"
  },
  {
    "objectID": "day6/index.html#colorで色を潰す",
    "href": "day6/index.html#colorで色を潰す",
    "title": "データサイエンス",
    "section": "colorで色を潰す",
    "text": "colorで色を潰す\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  geom_point()"
  },
  {
    "objectID": "day6/index.html#colorで色を潰す-1",
    "href": "day6/index.html#colorで色を潰す-1",
    "title": "データサイエンス",
    "section": "colorで色を潰す",
    "text": "colorで色を潰す\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  geom_point()"
  },
  {
    "objectID": "day6/index.html#geom_smooth回帰直線を付け加える",
    "href": "day6/index.html#geom_smooth回帰直線を付け加える",
    "title": "データサイエンス",
    "section": "geom_smooth()回帰直線を付け加える",
    "text": "geom_smooth()回帰直線を付け加える\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "day6/index.html#geom_smooth回帰直線を付け加える-1",
    "href": "day6/index.html#geom_smooth回帰直線を付け加える-1",
    "title": "データサイエンス",
    "section": "geom_smooth()回帰直線を付け加える",
    "text": "geom_smooth()回帰直線を付け加える\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "day6/index.html#目的の図と何か違う",
    "href": "day6/index.html#目的の図と何か違う",
    "title": "データサイエンス",
    "section": "目的の図と何か違う・・",
    "text": "目的の図と何か違う・・"
  },
  {
    "objectID": "day6/index.html#aes設定はgeom_の中でもできる",
    "href": "day6/index.html#aes設定はgeom_の中でもできる",
    "title": "データサイエンス",
    "section": "aes設定はgeom_()の中でもできる",
    "text": "aes設定はgeom_()の中でもできる\n\n\n\nggplot()で指定すると、全てのレーヤーに使用される\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  geom_point()\n\n\n\ngeom_()で指定すると、そのレーヤーだけで使用される\n\n\nggplot(\n  data = penguins\n) +\n  geom_point(\n    mapping = aes(\n      x = flipper_length_mm,\n      y = body_mass_g,\n      color = species\n  )\n)"
  },
  {
    "objectID": "day6/index.html#geom_smoothとgeom_pointで指定したい要素を考えよう",
    "href": "day6/index.html#geom_smoothとgeom_pointで指定したい要素を考えよう",
    "title": "データサイエンス",
    "section": "geom_smooth()とgeom_point()で指定したい要素を考えよう",
    "text": "geom_smooth()とgeom_point()で指定したい要素を考えよう"
  },
  {
    "objectID": "day6/index.html#colorをgeom_pointだけ指定しよう",
    "href": "day6/index.html#colorをgeom_pointだけ指定しよう",
    "title": "データサイエンス",
    "section": "colorをgeom_point()だけ指定しよう",
    "text": "colorをgeom_point()だけ指定しよう\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(\n    mapping = aes(\n      color = species\n    )\n) +\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "day6/index.html#チャレンジshapeで点の形を変える",
    "href": "day6/index.html#チャレンジshapeで点の形を変える",
    "title": "データサイエンス",
    "section": "チャレンジ：shapeで点の形を変える",
    "text": "チャレンジ：shapeで点の形を変える\naesの中でshapeを使うことによって、それぞれの種を点の形で表しましょう"
  },
  {
    "objectID": "day6/index.html#labsでラベルをきれいにする",
    "href": "day6/index.html#labsでラベルをきれいにする",
    "title": "データサイエンス",
    "section": "labs()でラベルをきれいにする",
    "text": "labs()でラベルをきれいにする\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"\n  )"
  },
  {
    "objectID": "day6/index.html#labsでラベルを整える",
    "href": "day6/index.html#labsでラベルを整える",
    "title": "データサイエンス",
    "section": "labs()でラベルを整える",
    "text": "labs()でラベルを整える\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"\n  )"
  },
  {
    "objectID": "day6/index.html#scale_colorで色を変える",
    "href": "day6/index.html#scale_colorで色を変える",
    "title": "データサイエンス",
    "section": "scale_colorで色を変える",
    "text": "scale_colorで色を変える\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"\n  ) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "day6/index.html#scale_colorで色を変える-1",
    "href": "day6/index.html#scale_colorで色を変える-1",
    "title": "データサイエンス",
    "section": "scale_colorで色を変える",
    "text": "scale_colorで色を変える\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"\n  ) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "day6/index.html#よりもコンパクトな書き方",
    "href": "day6/index.html#よりもコンパクトな書き方",
    "title": "データサイエンス",
    "section": "よりもコンパクトな書き方",
    "text": "よりもコンパクトな書き方\ndata =とmapping =を書かなくて良い\n\n\nggplot(penguins,　aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"\n  ) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "day6/index.html#base_familyで文字化けを防ぐ",
    "href": "day6/index.html#base_familyで文字化けを防ぐ",
    "title": "データサイエンス",
    "section": "base_familyで文字化けを防ぐ",
    "text": "base_familyで文字化けを防ぐ\n\n\nggplot(penguins,　aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"体重とフリッパーの長さ\",\n    subtitle = \"アデリー、チンストラップ、ジェンツーのペンギンのサイズ\",\n    x = \"フリッパーの長さ（mm）\", y = \"体重（g）\",\n    color = \"種\", shape = \"種\"\n  ) +\n  scale_color_colorblind() + \n  theme_gray(base_family = \"HiraKakuPro-W3\")"
  },
  {
    "objectID": "day6/index.html#base_familyで文字化けを防ぐ-1",
    "href": "day6/index.html#base_familyで文字化けを防ぐ-1",
    "title": "データサイエンス",
    "section": "base_familyで文字化けを防ぐ",
    "text": "base_familyで文字化けを防ぐ\n\n\nggplot(penguins,　aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"体重とフリッパーの長さ\",\n    subtitle = \"アデリー、チンストラップ、ジェンツーのペンギンのサイズ\",\n    x = \"フリッパーの長さ（mm）\", y = \"体重（g）\",\n    color = \"種\", shape = \"種\"\n  ) +\n  scale_color_colorblind() + \n  theme_gray(base_family = \"HiraKakuPro-W3\")"
  },
  {
    "objectID": "day6/index.html#まとめ",
    "href": "day6/index.html#まとめ",
    "title": "データサイエンス",
    "section": "まとめ",
    "text": "まとめ\n\nどのデータやグラフでも、同じ「文法」で記述することができます。\naesthetic mapping（mappingとaes）、どのデータをグラフのどの要素で表示するかを設定する\ngeometry（geom）は、グラフの形状を設定する\nグラフを作成するコマンドは、レイヤーを+で重ねていく"
  },
  {
    "objectID": "day7/index.html#ディスカッション",
    "href": "day7/index.html#ディスカッション",
    "title": "データサイエンス",
    "section": "ディスカッション",
    "text": "ディスカッション\nよくあるパターン：Rで解析後、その結果をWordにコピペする\n\nこの方法のメリットとデメリットを議論してください"
  },
  {
    "objectID": "day7/index.html#解析結果をワードにコピペする",
    "href": "day7/index.html#解析結果をワードにコピペする",
    "title": "データサイエンス",
    "section": "解析結果をワードにコピペする",
    "text": "解析結果をワードにコピペする\n\n利点：\n\n手軽である（一度だけの場合）\n\n欠点：\n\n文章に記載された結果がデータに基づいているという保証がない\n解析を再び行った場合、どの部分を再度コピペすべきか不明確になる"
  },
  {
    "objectID": "day7/index.html#quartoを用いた再現可能な文書の作成",
    "href": "day7/index.html#quartoを用いた再現可能な文書の作成",
    "title": "データサイエンス",
    "section": "Quartoを用いた再現可能な文書の作成",
    "text": "Quartoを用いた再現可能な文書の作成\n\nQuartoとは、Rコードの計算結果を直接文書に埋め込むためのソフトウェア\nRやRStudioとは別だが、RStudioと一緒にインストールされるため、個別にインストールする必要はない\nファイルの拡張子は.Qmd\n\n「Quarto Markdown」（Markdownについては後ほど説明する）"
  },
  {
    "objectID": "day7/index.html#qmdファイルの基本",
    "href": "day7/index.html#qmdファイルの基本",
    "title": "データサイエンス",
    "section": ".Qmdファイルの基本",
    "text": ".Qmdファイルの基本\n\n\n---\ntitle: \"Diamond sizes\"\ndate: 2022-09-12\nformat: html\n---\n\n```{r}\n#| label: setup\n#| include: false\n\nlibrary(tidyverse)\n\nsmaller &lt;- diamonds |&gt; \n  filter(carat &lt;= 2.5)\n```\n\nWe have data about `r nrow(diamonds)` diamonds.\nOnly `r nrow(diamonds) - nrow(smaller)` are larger than 2.5 carats.\nThe distribution of the remainder is shown below:\n\n```{r}\n#| label: plot-smaller-diamonds\n#| echo: false\n\nsmaller |&gt; \n  ggplot(aes(x = carat)) + \n  geom_freqpoly(binwidth = 0.01)\n```"
  },
  {
    "objectID": "day7/index.html#今までのコードの書き方.rファイル",
    "href": "day7/index.html#今までのコードの書き方.rファイル",
    "title": "データサイエンス",
    "section": "今までのコードの書き方（.Rファイル）",
    "text": "今までのコードの書き方（.Rファイル）\n\n普通に書く文章は正常なコードでないといけない\n他の文章はコメントとして書く\n\n\n# 小さなデータセットを作る\nsmaller &lt;- diamonds |&gt; \n  filter(carat &lt;= 2.5)"
  },
  {
    "objectID": "day7/index.html#quartoの書き方",
    "href": "day7/index.html#quartoの書き方",
    "title": "データサイエンス",
    "section": "Quartoの書き方",
    "text": "Quartoの書き方\n\n\n\n今までの書き方の反対\n\n普通に書く文章はコードではない\nコードを特別な場所で書く（コードチャンク）\n```{r} と ```で囲む\n\n\n\n\n\n\n\nLet's make a smaller dataset:\n\n```{r}\n#| label: setup\n#| include: false\n\nlibrary(tidyverse)\n\nsmaller &lt;- diamonds |&gt; \n  filter(carat &lt;= 2.5)\n```"
  },
  {
    "objectID": "day7/index.html#コードの実行の仕方",
    "href": "day7/index.html#コードの実行の仕方",
    "title": "データサイエンス",
    "section": "コードの実行の仕方",
    "text": "コードの実行の仕方\n\nRStudioには、それぞれのコードチャンクの上に「再生」ボタンをクリック"
  },
  {
    "objectID": "day7/index.html#コードの実行の仕方-1",
    "href": "day7/index.html#コードの実行の仕方-1",
    "title": "データサイエンス",
    "section": "コードの実行の仕方",
    "text": "コードの実行の仕方\n\nおすすめ：設定を「Chunk Output in Console」に変える"
  },
  {
    "objectID": "day7/index.html#コードの実行の仕方-2",
    "href": "day7/index.html#コードの実行の仕方-2",
    "title": "データサイエンス",
    "section": "コードの実行の仕方",
    "text": "コードの実行の仕方\n\n全部を一気に走らせて、レポートを作成するには、「Render」ボタンをクリック"
  },
  {
    "objectID": "day7/index.html#コードの実行の仕方-3",
    "href": "day7/index.html#コードの実行の仕方-3",
    "title": "データサイエンス",
    "section": "コードの実行の仕方",
    "text": "コードの実行の仕方\n\nデフォルトでは、レポートはHTML形式"
  },
  {
    "objectID": "day7/index.html#yamlヘッダーについて",
    "href": "day7/index.html#yamlヘッダーについて",
    "title": "データサイエンス",
    "section": "YAMLヘッダーについて",
    "text": "YAMLヘッダーについて\n\nYAMLとは、「YAML ain’t markup language」の略\n\nプログラマーの冗談みたいな名前。気にしないでください。\n\n設定を書くための言語。項目名を書いて、コロンを書いて、設定を書く：\n\n\n\n項目1: 設定\n項目2: 設定\n\ntitle: \"Diamond sizes\"\ndate: 2022-09-12"
  },
  {
    "objectID": "day7/index.html#yamlヘッダーで設定する項目",
    "href": "day7/index.html#yamlヘッダーで設定する項目",
    "title": "データサイエンス",
    "section": "YAMLヘッダーで設定する項目",
    "text": "YAMLヘッダーで設定する項目\n\nタイトル\n著者名\n出版日程\n形式（PDF、HTML、docx）\n\nなど"
  },
  {
    "objectID": "day7/index.html#チャレンジ",
    "href": "day7/index.html#チャレンジ",
    "title": "データサイエンス",
    "section": "チャレンジ",
    "text": "チャレンジ\n出力をdocxに変えてから、レポートを出力してください"
  },
  {
    "objectID": "day7/index.html#markdownでレポートの見た目を調整する",
    "href": "day7/index.html#markdownでレポートの見た目を調整する",
    "title": "データサイエンス",
    "section": "Markdownでレポートの見た目を調整する",
    "text": "Markdownでレポートの見た目を調整する\n\n.Qmdファイルはプレーンテキスト（フォントや文字のサイズなど変えることができない）\nレポートのフォントなどを変えたい時は、Markdownというコードを使う：\n\n\n\n*italic*\n\n**bold**\n\n~~strikeout~~\n\nitalic\nbold\nstrikeout\n\n\n\n\n他のMarkdownの使い方：https://r4ds.hadley.nz/quarto#sec-source-editor"
  },
  {
    "objectID": "day7/index.html#コードチャンクの設定",
    "href": "day7/index.html#コードチャンクの設定",
    "title": "データサイエンス",
    "section": "コードチャンクの設定",
    "text": "コードチャンクの設定\n\nそれぞれのコードチャンクの設定を変えることができる\n多くの場合、レポートでは解析結果を作ったコードを見せたくない\n\necho: false設定でコードを隠す\n\nコードチャンクの始まりに#|で始まる行に設定をYAMLで書く"
  },
  {
    "objectID": "day7/index.html#コードチャンクの設定-1",
    "href": "day7/index.html#コードチャンクの設定-1",
    "title": "データサイエンス",
    "section": "コードチャンクの設定",
    "text": "コードチャンクの設定\n\n\n```{r}\n#| echo: false\nlibrary(tidyverse)\n\nsmaller &lt;- diamonds |&gt; \n  filter(carat &lt;= 2.5)\n```"
  },
  {
    "objectID": "day7/index.html#他の設定など",
    "href": "day7/index.html#他の設定など",
    "title": "データサイエンス",
    "section": "他の設定など",
    "text": "他の設定など\n\nR4DS 「Quarto」\nhttps://quarto.org/"
  },
  {
    "objectID": "day7/index.html#レポート",
    "href": "day7/index.html#レポート",
    "title": "データサイエンス",
    "section": "レポート",
    "text": "レポート\n\nTidy Tuesdayプロジェクトが提供しているデータセットを使って、二つ以上のグラフを作成し、そのグラフから読み取るメッセージを説明してください\nQuartoとRを使って書いて、HTMLとして出力\n次回（５月２８日）までに提出して、授業中に発表する"
  },
  {
    "objectID": "day7/index.html#解析結果をwordにコピペする",
    "href": "day7/index.html#解析結果をwordにコピペする",
    "title": "データサイエンス",
    "section": "解析結果をWordにコピペする",
    "text": "解析結果をWordにコピペする\n\n利点：\n\n手軽である（一度だけの場合）\n\n欠点：\n\n文章に記載された結果がデータに基づいている保証がない\n解析を再び行った場合、どの部分を再度コピペすべきか不明確になる"
  },
  {
    "objectID": "day7/index.html#データの読み込み",
    "href": "day7/index.html#データの読み込み",
    "title": "データサイエンス",
    "section": "データの読み込み",
    "text": "データの読み込み\n\nlibrary(tidytuesdayR)\ntuesdata &lt;- tt_load(2022, week = 10)\n\n\n    Downloading file 1 of 1: `erasmus.csv`\n\nerasmus &lt;- tuesdata$erasmus"
  },
  {
    "objectID": "day7/index.html#レポートのデータの読み込み",
    "href": "day7/index.html#レポートのデータの読み込み",
    "title": "データサイエンス",
    "section": "レポートのデータの読み込み",
    "text": "レポートのデータの読み込み\n\nlibrary(tidytuesdayR)\ntuesdata &lt;- tt_load(2022, week = 10)\nerasmus &lt;- tuesdata$erasmus\n\nデータの詳細については、こちらを見てください"
  },
  {
    "objectID": "day7/diamond-sizes.html",
    "href": "day7/diamond-sizes.html",
    "title": "Diamond sizes",
    "section": "",
    "text": "We have data about 53940 diamonds. Only 126 are larger than 2.5 carats. The distribution of the remainder is shown below:"
  },
  {
    "objectID": "day7/diamond-sizes-small.html",
    "href": "day7/diamond-sizes-small.html",
    "title": "データサイエンス",
    "section": "",
    "text": "Let’s make a smaller dataset:"
  },
  {
    "objectID": "day7/diamond-sizes-hide.html",
    "href": "day7/diamond-sizes-hide.html",
    "title": "データサイエンス",
    "section": "",
    "text": "── Attaching core tidyverse packages ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "day8/index.html#再現可能性を高めよう",
    "href": "day8/index.html#再現可能性を高めよう",
    "title": "データサイエンス",
    "section": "再現可能性を高めよう",
    "text": "再現可能性を高めよう\n\n今回の授業ではコードの書き方（R）を学んだ\nでも、解析を再現可能にするのに、全部で三つのことを管理しないといけない：\n\nコードの管理（バージョン管理）\n解析環境の管理\nデータの管理"
  },
  {
    "objectID": "day8/index.html#バージョン管理git",
    "href": "day8/index.html#バージョン管理git",
    "title": "データサイエンス",
    "section": "バージョン管理：git",
    "text": "バージョン管理：git\n\nバージョン管理とは、ソフトウェアやドキュメントの変更履歴を追跡し、特定の時点に戻すことができるシステム\n特に Git は広く使用されており、GitHub というプラットフォームを利用してオンラインでプロジェクトを管理できる\n複数人での作業が容易になり、同じファイルを同時に編集しても衝突を防ぎやすくなる"
  },
  {
    "objectID": "day8/index.html#解析環境の管理docker",
    "href": "day8/index.html#解析環境の管理docker",
    "title": "データサイエンス",
    "section": "解析環境の管理：Docker",
    "text": "解析環境の管理：Docker\n\nコードとまた別に、解析する環境（パソコン、ソフトウエア）の管理が必要\nコードが同じでも、解析環境が異なると、同じ解析結果が得られない恐れがある\nハードウエアを再現するのはほぼ不可能ですが、ソフトウエアの環境をDockerというツールで再現することはできる"
  },
  {
    "objectID": "day8/index.html#dockerの概要",
    "href": "day8/index.html#dockerの概要",
    "title": "データサイエンス",
    "section": "Dockerの概要",
    "text": "Dockerの概要\n\nDockerは、自分のパソコンの中に存在する別のパソコンみたいなもの\n「イメージ」あるいは「コンテナ」と呼ぶ\n自分のパソコンのソフトを変えても（RやRパッケージのアップげレードなど）、コンテナの中身は変わらないので、どれくらい時間が経っても、再現できる"
  },
  {
    "objectID": "day8/index.html#gitとdockerのデモンストレーション",
    "href": "day8/index.html#gitとdockerのデモンストレーション",
    "title": "データサイエンス",
    "section": "gitとDockerのデモンストレーション",
    "text": "gitとDockerのデモンストレーション\nhttps://github.com/joelnitta/pleurosoriopsis\n\n必要なソフトはDockerのみ\nあとは全部Dockerのコンテナに入っているので、別にインストールするひつしょうがない"
  },
  {
    "objectID": "day8/index.html#データのリポジトリ",
    "href": "day8/index.html#データのリポジトリ",
    "title": "データサイエンス",
    "section": "データのリポジトリ",
    "text": "データのリポジトリ\n\n解析（論文）を発表する際、データも公開しましょう\n\n再現性を高める\n信頼度を高める\n「頼めば提供します」では足りない！\n\n公開しているデータのリポジトリに置くのがベスト"
  },
  {
    "objectID": "day8/index.html#データのリポジトリ-1",
    "href": "day8/index.html#データのリポジトリ-1",
    "title": "データサイエンス",
    "section": "データのリポジトリ",
    "text": "データのリポジトリ\n\nZenodo\nData Dryad\nFigShare\n\nデータを置くだけではなく、キチンと説明することも大事（「metadata」）"
  },
  {
    "objectID": "day8/index.html#erasmusのデータ",
    "href": "day8/index.html#erasmusのデータ",
    "title": "データサイエンス",
    "section": "erasmusのデータ",
    "text": "erasmusのデータ\nhttps://data.europa.eu/data/datasets/erasmus-mobility-statistics-2014-2020?locale=en\nメタデータがちゃんと記録されていないから困りましたね・・"
  },
  {
    "objectID": "day8/index.html#tokyorについて",
    "href": "day8/index.html#tokyorについて",
    "title": "データサイエンス",
    "section": "tokyoRについて",
    "text": "tokyoRについて\n\nRに困った時、tokyoRのスラックで聞くと（多くの場合）すぐに誰か答えてくれる\nhttps://github.com/tokyor/r-wakalangからジョイン"
  },
  {
    "objectID": "day8/index.html",
    "href": "day8/index.html",
    "title": "第８回：再現可能なデータ解析のベストプラクティス",
    "section": "",
    "text": "2024-05-28\nhttps://data-science-chiba-2024.github.io/day8/\n\n\n\n今回の授業ではコードの書き方（R）を学んだ\nでも、解析を再現可能にするのに、全部で三つのことを管理しないといけない：\n\nコードの管理（バージョン管理）\n解析環境の管理\nデータの管理\n\n\n\n\n\n\nバージョン管理とは、ソフトウェアやドキュメントの変更履歴を追跡し、特定の時点に戻すことができるシステム\n特に Git は広く使用されており、GitHub というプラットフォームを利用してオンラインでプロジェクトを管理できる\n複数人での作業が容易になり、同じファイルを同時に編集しても衝突を防ぎやすくなる\n\n\n\n\n\nコードとまた別に、解析する環境（パソコン、ソフトウエア）の管理が必要\nコードが同じでも、解析環境が異なると、同じ解析結果が得られない恐れがある\nハードウエアを再現するのはほぼ不可能ですが、ソフトウエアの環境をDockerというツールで再現することはできる\n\n\n\n\n\nDockerは、自分のパソコンの中に存在する別のパソコンみたいなもの\n「イメージ」あるいは「コンテナ」と呼ぶ\n自分のパソコンのソフトを変えても（RやRパッケージのアップげレードなど）、コンテナの中身は変わらないので、どれくらい時間が経っても、再現できる\n\n\n\n\nhttps://github.com/joelnitta/pleurosoriopsis\n\n必要なソフトはDockerのみ\nあとは全部Dockerのコンテナに入っているので、別にインストールするひつしょうがない\n\n\n\n\n\n解析（論文）を発表する際、データも公開しましょう\n\n再現性を高める\n信頼度を高める\n「頼めば提供します」では足りない！\n\n公開しているデータのリポジトリに置くのがベスト\n\n\n\n\n\nZenodo\nData Dryad\nFigShare\n\nデータを置くだけではなく、キチンと説明することも大事（「metadata」）\n\n\n\nhttps://data.europa.eu/data/datasets/erasmus-mobility-statistics-2014-2020?locale=en\nメタデータがちゃんと記録されていないから困りましたね・・\n\n\n\n\nRに困った時、tokyoRのスラックで聞くと（多くの場合）すぐに誰か答えてくれる\nhttps://github.com/tokyor/r-wakalangからジョイン"
  }
]